{"messages":[{"role":"system","content":"You are a helpful assistant that converts user song preferences into an SQL query. No other responses are needed. The query should be based on numerical feature mappings from user preferences. The features include 'danceability', 'energy', 'acousticness', 'valence', 'tempo', 'year', 'genre', 'loudness', 'liveness', and others relevant for music. Each feature is scaled between 0 and 1, except 'year' which is a 4-digit number, and 'genre' which is a text string. An example user input might be: 'I want upbeat acoustic songs for working out'. An example SQL query output for this input might be: \"SELECT * FROM songs WHERE genre = 'acoustic' AND energy > 0.658 AND tempo > 0.589900517214482 AND valence > 0.6 AND liveliness < 0.226 ORDER BY popularity DESC LIMIT 10;\" KNOW: Valid genres include [('acoustic',), ('afrobeat',), ('alt-rock',), ('ambient',), ('black-metal',), ('blues',), ('breakbeat',), ('cantopop',), ('chicago-house',), ('chill',), ('classical',), ('club',), ('comedy',), ('country',), ('dance',), ('dancehall',), ('death-metal',), ('deep-house',), ('detroit-techno',), ('disco',), ('drum-and-bass',), ('dub',), ('dubstep',), ('edm',), ('electro',), ('electronic',), ('emo',), ('folk',), ('forro',), ('french',), ('funk',), ('garage',), ('german',), ('gospel',), ('goth',), ('grindcore',), ('groove',), ('guitar',), ('hard-rock',), ('hardcore',), ('hardstyle',), ('heavy-metal',), ('hip-hop',), ('house',), ('indian',), ('indie-pop',), ('industrial',), ('jazz',), ('k-pop',), ('metal',), ('metalcore',), ('minimal-techno',), ('new-age',), ('opera',), ('party',), ('piano',), ('pop',), ('pop-film',), ('power-pop',), ('progressive-house',), ('psych-rock',), ('punk',), ('punk-rock',), ('rock',), ('rock-n-roll',), ('romance',), ('sad',), ('salsa',), ('samba',), ('sertanejo',), ('show-tunes',), ('singer-songwriter',), ('ska',), ('sleep',), ('songwriter',), ('soul',), ('spanish',), ('swedish',), ('tango',), ('techno',), ('trance',), ('trip-hop',)] Do not search for genres that are not in the list. IMPORTANT: Valid SQL columns include ONLY: id INTEGER PRIMARY KEY, artist_name TEXT NOT NULL, track_name TEXT NOT NULL, track_id TEXT NOT NULL UNIQUE, popularity INTEGER, year INTEGER, genre TEXT, danceability REAL, energy REAL, key INTEGER, loudness REAL, mode INTEGER, acousticness REAL, instrumentalness REAL, liveness REAL, valence REAL, tempo REAL. Given the user query, generate a complete SQL query, be as specific as you find necessary for the query. The result should always include a LIMIT 10 clause unless otherwise specified by the user."},{"role":"user","content":"Could you find me some jazz pieces from the mid-2000s that feel moderately lively, but not too intense, and have a gentle acoustic character? Something that could play softly in the background."},{"role":"assistant","content":"SELECT * FROM songs WHERE genre = 'jazz' AND year BETWEEN 2004 AND 2006 AND energy BETWEEN 0.4 AND 0.6 AND liveness > 0.3 AND acousticness > 0.4 AND loudness < 0.5 AND valence > 0.4 ORDER BY popularity DESC LIMIT 10;\n"}]}
{"messages":[{"role":"system","content":"You are a helpful assistant that converts user song preferences into an SQL query. No other responses are needed. The query should be based on numerical feature mappings from user preferences. The features include 'danceability', 'energy', 'acousticness', 'valence', 'tempo', 'year', 'genre', 'loudness', 'liveness', and others relevant for music. Each feature is scaled between 0 and 1, except 'year' which is a 4-digit number, and 'genre' which is a text string. An example user input might be: 'I want upbeat acoustic songs for working out'. An example SQL query output for this input might be: \"SELECT * FROM songs WHERE genre = 'acoustic' AND energy > 0.658 AND tempo > 0.589900517214482 AND valence > 0.6 AND liveliness < 0.226 ORDER BY popularity DESC LIMIT 10;\" KNOW: Valid genres include [('acoustic',), ('afrobeat',), ('alt-rock',), ('ambient',), ('black-metal',), ('blues',), ('breakbeat',), ('cantopop',), ('chicago-house',), ('chill',), ('classical',), ('club',), ('comedy',), ('country',), ('dance',), ('dancehall',), ('death-metal',), ('deep-house',), ('detroit-techno',), ('disco',), ('drum-and-bass',), ('dub',), ('dubstep',), ('edm',), ('electro',), ('electronic',), ('emo',), ('folk',), ('forro',), ('french',), ('funk',), ('garage',), ('german',), ('gospel',), ('goth',), ('grindcore',), ('groove',), ('guitar',), ('hard-rock',), ('hardcore',), ('hardstyle',), ('heavy-metal',), ('hip-hop',), ('house',), ('indian',), ('indie-pop',), ('industrial',), ('jazz',), ('k-pop',), ('metal',), ('metalcore',), ('minimal-techno',), ('new-age',), ('opera',), ('party',), ('piano',), ('pop',), ('pop-film',), ('power-pop',), ('progressive-house',), ('psych-rock',), ('punk',), ('punk-rock',), ('rock',), ('rock-n-roll',), ('romance',), ('sad',), ('salsa',), ('samba',), ('sertanejo',), ('show-tunes',), ('singer-songwriter',), ('ska',), ('sleep',), ('songwriter',), ('soul',), ('spanish',), ('swedish',), ('tango',), ('techno',), ('trance',), ('trip-hop',)] Do not search for genres that are not in the list. IMPORTANT: Valid SQL columns include ONLY: id INTEGER PRIMARY KEY, artist_name TEXT NOT NULL, track_name TEXT NOT NULL, track_id TEXT NOT NULL UNIQUE, popularity INTEGER, year INTEGER, genre TEXT, danceability REAL, energy REAL, key INTEGER, loudness REAL, mode INTEGER, acousticness REAL, instrumentalness REAL, liveness REAL, valence REAL, tempo REAL. Given the user query, generate a complete SQL query, be as specific as you find necessary for the query. The result should always include a LIMIT 10 clause unless otherwise specified by the user."},{"role":"user","content":"I’d love some ambient tracks from the early 2010s that are very calm, with low energy, gentle acousticness, and a soothing tempo, perfect for meditation."},{"role":"assistant","content":"SELECT * FROM songs WHERE genre = 'ambient' AND year BETWEEN 2010 AND 2012 AND energy < 0.3 AND acousticness > 0.5 AND tempo < 0.4 AND valence > 0.3 AND loudness < 0.4 AND liveness < 0.3 ORDER BY popularity DESC LIMIT 10;\n"}]}
{"messages":[{"role":"system","content":"You are a helpful assistant that converts user song preferences into an SQL query. No other responses are needed. The query should be based on numerical feature mappings from user preferences. The features include 'danceability', 'energy', 'acousticness', 'valence', 'tempo', 'year', 'genre', 'loudness', 'liveness', and others relevant for music. Each feature is scaled between 0 and 1, except 'year' which is a 4-digit number, and 'genre' which is a text string. An example user input might be: 'I want upbeat acoustic songs for working out'. An example SQL query output for this input might be: \"SELECT * FROM songs WHERE genre = 'acoustic' AND energy > 0.658 AND tempo > 0.589900517214482 AND valence > 0.6 AND liveliness < 0.226 ORDER BY popularity DESC LIMIT 10;\" KNOW: Valid genres include [('acoustic',), ('afrobeat',), ('alt-rock',), ('ambient',), ('black-metal',), ('blues',), ('breakbeat',), ('cantopop',), ('chicago-house',), ('chill',), ('classical',), ('club',), ('comedy',), ('country',), ('dance',), ('dancehall',), ('death-metal',), ('deep-house',), ('detroit-techno',), ('disco',), ('drum-and-bass',), ('dub',), ('dubstep',), ('edm',), ('electro',), ('electronic',), ('emo',), ('folk',), ('forro',), ('french',), ('funk',), ('garage',), ('german',), ('gospel',), ('goth',), ('grindcore',), ('groove',), ('guitar',), ('hard-rock',), ('hardcore',), ('hardstyle',), ('heavy-metal',), ('hip-hop',), ('house',), ('indian',), ('indie-pop',), ('industrial',), ('jazz',), ('k-pop',), ('metal',), ('metalcore',), ('minimal-techno',), ('new-age',), ('opera',), ('party',), ('piano',), ('pop',), ('pop-film',), ('power-pop',), ('progressive-house',), ('psych-rock',), ('punk',), ('punk-rock',), ('rock',), ('rock-n-roll',), ('romance',), ('sad',), ('salsa',), ('samba',), ('sertanejo',), ('show-tunes',), ('singer-songwriter',), ('ska',), ('sleep',), ('songwriter',), ('soul',), ('spanish',), ('swedish',), ('tango',), ('techno',), ('trance',), ('trip-hop',)] Do not search for genres that are not in the list. IMPORTANT: Valid SQL columns include ONLY: id INTEGER PRIMARY KEY, artist_name TEXT NOT NULL, track_name TEXT NOT NULL, track_id TEXT NOT NULL UNIQUE, popularity INTEGER, year INTEGER, genre TEXT, danceability REAL, energy REAL, key INTEGER, loudness REAL, mode INTEGER, acousticness REAL, instrumentalness REAL, liveness REAL, valence REAL, tempo REAL. Given the user query, generate a complete SQL query, be as specific as you find necessary for the query. The result should always include a LIMIT 10 clause unless otherwise specified by the user."},{"role":"user","content":"I’m looking for salsa music from the mid-1990s that’s moderately danceable and energetic, but not overwhelming—just lively enough for a casual backyard party. A bit of acoustic feel would be nice too."},{"role":"assistant","content":"SELECT * FROM songs WHERE genre = 'salsa' AND year BETWEEN 1994 AND 1996 AND danceability BETWEEN 0.5 AND 0.7 AND energy BETWEEN 0.5 AND 0.7 AND acousticness > 0.3 AND valence > 0.4 AND loudness < 0.6 ORDER BY popularity DESC LIMIT 10;\n"}]}
{"messages":[{"role":"system","content":"You are a helpful assistant that converts user song preferences into an SQL query. No other responses are needed. The query should be based on numerical feature mappings from user preferences. The features include 'danceability', 'energy', 'acousticness', 'valence', 'tempo', 'year', 'genre', 'loudness', 'liveness', and others relevant for music. Each feature is scaled between 0 and 1, except 'year' which is a 4-digit number, and 'genre' which is a text string. An example user input might be: 'I want upbeat acoustic songs for working out'. An example SQL query output for this input might be: \"SELECT * FROM songs WHERE genre = 'acoustic' AND energy > 0.658 AND tempo > 0.589900517214482 AND valence > 0.6 AND liveliness < 0.226 ORDER BY popularity DESC LIMIT 10;\" KNOW: Valid genres include [('acoustic',), ('afrobeat',), ('alt-rock',), ('ambient',), ('black-metal',), ('blues',), ('breakbeat',), ('cantopop',), ('chicago-house',), ('chill',), ('classical',), ('club',), ('comedy',), ('country',), ('dance',), ('dancehall',), ('death-metal',), ('deep-house',), ('detroit-techno',), ('disco',), ('drum-and-bass',), ('dub',), ('dubstep',), ('edm',), ('electro',), ('electronic',), ('emo',), ('folk',), ('forro',), ('french',), ('funk',), ('garage',), ('german',), ('gospel',), ('goth',), ('grindcore',), ('groove',), ('guitar',), ('hard-rock',), ('hardcore',), ('hardstyle',), ('heavy-metal',), ('hip-hop',), ('house',), ('indian',), ('indie-pop',), ('industrial',), ('jazz',), ('k-pop',), ('metal',), ('metalcore',), ('minimal-techno',), ('new-age',), ('opera',), ('party',), ('piano',), ('pop',), ('pop-film',), ('power-pop',), ('progressive-house',), ('psych-rock',), ('punk',), ('punk-rock',), ('rock',), ('rock-n-roll',), ('romance',), ('sad',), ('salsa',), ('samba',), ('sertanejo',), ('show-tunes',), ('singer-songwriter',), ('ska',), ('sleep',), ('songwriter',), ('soul',), ('spanish',), ('swedish',), ('tango',), ('techno',), ('trance',), ('trip-hop',)] Do not search for genres that are not in the list. IMPORTANT: Valid SQL columns include ONLY: id INTEGER PRIMARY KEY, artist_name TEXT NOT NULL, track_name TEXT NOT NULL, track_id TEXT NOT NULL UNIQUE, popularity INTEGER, year INTEGER, genre TEXT, danceability REAL, energy REAL, key INTEGER, loudness REAL, mode INTEGER, acousticness REAL, instrumentalness REAL, liveness REAL, valence REAL, tempo REAL. Given the user query, generate a complete SQL query, be as specific as you find necessary for the query. The result should always include a LIMIT 10 clause unless otherwise specified by the user."},{"role":"user","content":"I’d like some folk tunes from the late 2000s that have a moderate tempo, gentle acousticness, and a slightly positive mood—just enough to keep things pleasant but not too peppy."},{"role":"assistant","content":"SELECT * FROM songs WHERE genre = 'folk' AND year BETWEEN 2008 AND 2009 AND tempo BETWEEN 0.4 AND 0.6 AND acousticness > 0.4 AND valence > 0.4 AND energy < 0.5 AND loudness < 0.5 ORDER BY popularity DESC LIMIT 10;\n"}]}
{"messages":[{"role":"system","content":"You are a helpful assistant that converts user song preferences into an SQL query. No other responses are needed. The query should be based on numerical feature mappings from user preferences. The features include 'danceability', 'energy', 'acousticness', 'valence', 'tempo', 'year', 'genre', 'loudness', 'liveness', and others relevant for music. Each feature is scaled between 0 and 1, except 'year' which is a 4-digit number, and 'genre' which is a text string. An example user input might be: 'I want upbeat acoustic songs for working out'. An example SQL query output for this input might be: \"SELECT * FROM songs WHERE genre = 'acoustic' AND energy > 0.658 AND tempo > 0.589900517214482 AND valence > 0.6 AND liveliness < 0.226 ORDER BY popularity DESC LIMIT 10;\" KNOW: Valid genres include [('acoustic',), ('afrobeat',), ('alt-rock',), ('ambient',), ('black-metal',), ('blues',), ('breakbeat',), ('cantopop',), ('chicago-house',), ('chill',), ('classical',), ('club',), ('comedy',), ('country',), ('dance',), ('dancehall',), ('death-metal',), ('deep-house',), ('detroit-techno',), ('disco',), ('drum-and-bass',), ('dub',), ('dubstep',), ('edm',), ('electro',), ('electronic',), ('emo',), ('folk',), ('forro',), ('french',), ('funk',), ('garage',), ('german',), ('gospel',), ('goth',), ('grindcore',), ('groove',), ('guitar',), ('hard-rock',), ('hardcore',), ('hardstyle',), ('heavy-metal',), ('hip-hop',), ('house',), ('indian',), ('indie-pop',), ('industrial',), ('jazz',), ('k-pop',), ('metal',), ('metalcore',), ('minimal-techno',), ('new-age',), ('opera',), ('party',), ('piano',), ('pop',), ('pop-film',), ('power-pop',), ('progressive-house',), ('psych-rock',), ('punk',), ('punk-rock',), ('rock',), ('rock-n-roll',), ('romance',), ('sad',), ('salsa',), ('samba',), ('sertanejo',), ('show-tunes',), ('singer-songwriter',), ('ska',), ('sleep',), ('songwriter',), ('soul',), ('spanish',), ('swedish',), ('tango',), ('techno',), ('trance',), ('trip-hop',)] Do not search for genres that are not in the list. IMPORTANT: Valid SQL columns include ONLY: id INTEGER PRIMARY KEY, artist_name TEXT NOT NULL, track_name TEXT NOT NULL, track_id TEXT NOT NULL UNIQUE, popularity INTEGER, year INTEGER, genre TEXT, danceability REAL, energy REAL, key INTEGER, loudness REAL, mode INTEGER, acousticness REAL, instrumentalness REAL, liveness REAL, valence REAL, tempo REAL. Given the user query, generate a complete SQL query, be as specific as you find necessary for the query. The result should always include a LIMIT 10 clause unless otherwise specified by the user."},{"role":"user","content":"I’m interested in k-pop tracks from the early 2020s that are quite danceable but not extremely energetic, with a bright feel—something that can lift the mood without being too intense."},{"role":"assistant","content":"SELECT * FROM songs WHERE genre = 'k-pop' AND year BETWEEN 2020 AND 2021 AND danceability > 0.7 AND energy BETWEEN 0.4 AND 0.6 AND valence > 0.5 AND acousticness > 0.2 AND loudness < 0.6 ORDER BY popularity DESC LIMIT 10;\n"}]}
{"messages":[{"role":"system","content":"You are a helpful assistant that converts user song preferences into an SQL query. No other responses are needed. The query should be based on numerical feature mappings from user preferences. The features include 'danceability', 'energy', 'acousticness', 'valence', 'tempo', 'year', 'genre', 'loudness', 'liveness', and others relevant for music. Each feature is scaled between 0 and 1, except 'year' which is a 4-digit number, and 'genre' which is a text string. An example user input might be: 'I want upbeat acoustic songs for working out'. An example SQL query output for this input might be: \"SELECT * FROM songs WHERE genre = 'acoustic' AND energy > 0.658 AND tempo > 0.589900517214482 AND valence > 0.6 AND liveliness < 0.226 ORDER BY popularity DESC LIMIT 10;\" KNOW: Valid genres include [('acoustic',), ('afrobeat',), ('alt-rock',), ('ambient',), ('black-metal',), ('blues',), ('breakbeat',), ('cantopop',), ('chicago-house',), ('chill',), ('classical',), ('club',), ('comedy',), ('country',), ('dance',), ('dancehall',), ('death-metal',), ('deep-house',), ('detroit-techno',), ('disco',), ('drum-and-bass',), ('dub',), ('dubstep',), ('edm',), ('electro',), ('electronic',), ('emo',), ('folk',), ('forro',), ('french',), ('funk',), ('garage',), ('german',), ('gospel',), ('goth',), ('grindcore',), ('groove',), ('guitar',), ('hard-rock',), ('hardcore',), ('hardstyle',), ('heavy-metal',), ('hip-hop',), ('house',), ('indian',), ('indie-pop',), ('industrial',), ('jazz',), ('k-pop',), ('metal',), ('metalcore',), ('minimal-techno',), ('new-age',), ('opera',), ('party',), ('piano',), ('pop',), ('pop-film',), ('power-pop',), ('progressive-house',), ('psych-rock',), ('punk',), ('punk-rock',), ('rock',), ('rock-n-roll',), ('romance',), ('sad',), ('salsa',), ('samba',), ('sertanejo',), ('show-tunes',), ('singer-songwriter',), ('ska',), ('sleep',), ('songwriter',), ('soul',), ('spanish',), ('swedish',), ('tango',), ('techno',), ('trance',), ('trip-hop',)] Do not search for genres that are not in the list. IMPORTANT: Valid SQL columns include ONLY: id INTEGER PRIMARY KEY, artist_name TEXT NOT NULL, track_name TEXT NOT NULL, track_id TEXT NOT NULL UNIQUE, popularity INTEGER, year INTEGER, genre TEXT, danceability REAL, energy REAL, key INTEGER, loudness REAL, mode INTEGER, acousticness REAL, instrumentalness REAL, liveness REAL, valence REAL, tempo REAL. Given the user query, generate a complete SQL query, be as specific as you find necessary for the query. The result should always include a LIMIT 10 clause unless otherwise specified by the user."},{"role":"user","content":"I’m looking for upbeat afrobeat songs from the early 2010s that have a nice balance of energy and danceability, but aren’t too loud or aggressive. Something to keep the mood light and fun."},{"role":"assistant","content":"SELECT * FROM songs WHERE genre = 'afrobeat' AND year BETWEEN 2010 AND 2012 AND danceability > 0.6 AND energy BETWEEN 0.5 AND 0.7 AND loudness < 0.5 AND valence > 0.5 ORDER BY popularity DESC LIMIT 10;\n"}]}
{"messages":[{"role":"system","content":"You are a helpful assistant that converts user song preferences into an SQL query. No other responses are needed. The query should be based on numerical feature mappings from user preferences. The features include 'danceability', 'energy', 'acousticness', 'valence', 'tempo', 'year', 'genre', 'loudness', 'liveness', and others relevant for music. Each feature is scaled between 0 and 1, except 'year' which is a 4-digit number, and 'genre' which is a text string. An example user input might be: 'I want upbeat acoustic songs for working out'. An example SQL query output for this input might be: \"SELECT * FROM songs WHERE genre = 'acoustic' AND energy > 0.658 AND tempo > 0.589900517214482 AND valence > 0.6 AND liveliness < 0.226 ORDER BY popularity DESC LIMIT 10;\" KNOW: Valid genres include [('acoustic',), ('afrobeat',), ('alt-rock',), ('ambient',), ('black-metal',), ('blues',), ('breakbeat',), ('cantopop',), ('chicago-house',), ('chill',), ('classical',), ('club',), ('comedy',), ('country',), ('dance',), ('dancehall',), ('death-metal',), ('deep-house',), ('detroit-techno',), ('disco',), ('drum-and-bass',), ('dub',), ('dubstep',), ('edm',), ('electro',), ('electronic',), ('emo',), ('folk',), ('forro',), ('french',), ('funk',), ('garage',), ('german',), ('gospel',), ('goth',), ('grindcore',), ('groove',), ('guitar',), ('hard-rock',), ('hardcore',), ('hardstyle',), ('heavy-metal',), ('hip-hop',), ('house',), ('indian',), ('indie-pop',), ('industrial',), ('jazz',), ('k-pop',), ('metal',), ('metalcore',), ('minimal-techno',), ('new-age',), ('opera',), ('party',), ('piano',), ('pop',), ('pop-film',), ('power-pop',), ('progressive-house',), ('psych-rock',), ('punk',), ('punk-rock',), ('rock',), ('rock-n-roll',), ('romance',), ('sad',), ('salsa',), ('samba',), ('sertanejo',), ('show-tunes',), ('singer-songwriter',), ('ska',), ('sleep',), ('songwriter',), ('soul',), ('spanish',), ('swedish',), ('tango',), ('techno',), ('trance',), ('trip-hop',)] Do not search for genres that are not in the list. IMPORTANT: Valid SQL columns include ONLY: id INTEGER PRIMARY KEY, artist_name TEXT NOT NULL, track_name TEXT NOT NULL, track_id TEXT NOT NULL UNIQUE, popularity INTEGER, year INTEGER, genre TEXT, danceability REAL, energy REAL, key INTEGER, loudness REAL, mode INTEGER, acousticness REAL, instrumentalness REAL, liveness REAL, valence REAL, tempo REAL. Given the user query, generate a complete SQL query, be as specific as you find necessary for the query. The result should always include a LIMIT 10 clause unless otherwise specified by the user."},{"role":"user","content":"Give me some rock tunes from the mid-90s that feel confident and moderately energetic, with a good balance of danceability and valence to keep the mood positive, but not overly cheerful."},{"role":"assistant","content":"SELECT * FROM songs WHERE genre = 'rock' AND year BETWEEN 1994 AND 1996 AND energy BETWEEN 0.5 AND 0.7 AND danceability BETWEEN 0.4 AND 0.6 AND valence BETWEEN 0.4 AND 0.6 AND loudness < 0.6 ORDER BY popularity DESC LIMIT 10;\n"}]}
{"messages":[{"role":"system","content":"You are a helpful assistant that converts user song preferences into an SQL query. No other responses are needed. The query should be based on numerical feature mappings from user preferences. The features include 'danceability', 'energy', 'acousticness', 'valence', 'tempo', 'year', 'genre', 'loudness', 'liveness', and others relevant for music. Each feature is scaled between 0 and 1, except 'year' which is a 4-digit number, and 'genre' which is a text string. An example user input might be: 'I want upbeat acoustic songs for working out'. An example SQL query output for this input might be: \"SELECT * FROM songs WHERE genre = 'acoustic' AND energy > 0.658 AND tempo > 0.589900517214482 AND valence > 0.6 AND liveliness < 0.226 ORDER BY popularity DESC LIMIT 10;\" KNOW: Valid genres include [('acoustic',), ('afrobeat',), ('alt-rock',), ('ambient',), ('black-metal',), ('blues',), ('breakbeat',), ('cantopop',), ('chicago-house',), ('chill',), ('classical',), ('club',), ('comedy',), ('country',), ('dance',), ('dancehall',), ('death-metal',), ('deep-house',), ('detroit-techno',), ('disco',), ('drum-and-bass',), ('dub',), ('dubstep',), ('edm',), ('electro',), ('electronic',), ('emo',), ('folk',), ('forro',), ('french',), ('funk',), ('garage',), ('german',), ('gospel',), ('goth',), ('grindcore',), ('groove',), ('guitar',), ('hard-rock',), ('hardcore',), ('hardstyle',), ('heavy-metal',), ('hip-hop',), ('house',), ('indian',), ('indie-pop',), ('industrial',), ('jazz',), ('k-pop',), ('metal',), ('metalcore',), ('minimal-techno',), ('new-age',), ('opera',), ('party',), ('piano',), ('pop',), ('pop-film',), ('power-pop',), ('progressive-house',), ('psych-rock',), ('punk',), ('punk-rock',), ('rock',), ('rock-n-roll',), ('romance',), ('sad',), ('salsa',), ('samba',), ('sertanejo',), ('show-tunes',), ('singer-songwriter',), ('ska',), ('sleep',), ('songwriter',), ('soul',), ('spanish',), ('swedish',), ('tango',), ('techno',), ('trance',), ('trip-hop',)] Do not search for genres that are not in the list. IMPORTANT: Valid SQL columns include ONLY: id INTEGER PRIMARY KEY, artist_name TEXT NOT NULL, track_name TEXT NOT NULL, track_id TEXT NOT NULL UNIQUE, popularity INTEGER, year INTEGER, genre TEXT, danceability REAL, energy REAL, key INTEGER, loudness REAL, mode INTEGER, acousticness REAL, instrumentalness REAL, liveness REAL, valence REAL, tempo REAL. Given the user query, generate a complete SQL query, be as specific as you find necessary for the query. The result should always include a LIMIT 10 clause unless otherwise specified by the user."},{"role":"user","content":"Can you find me some blues songs from the late 1980s that have a mellow, acoustic feel, with gentle energy and a relaxed tempo that’s not too slow?"},{"role":"assistant","content":"SELECT * FROM songs WHERE genre = 'blues' AND year BETWEEN 1987 AND 1989 AND acousticness > 0.5 AND energy < 0.4 AND tempo BETWEEN 0.3 AND 0.5 AND valence > 0.4 AND loudness < 0.5 ORDER BY popularity DESC LIMIT 10;\n"}]}
{"messages":[{"role":"system","content":"You are a helpful assistant that converts user song preferences into an SQL query. No other responses are needed. The query should be based on numerical feature mappings from user preferences. The features include 'danceability', 'energy', 'acousticness', 'valence', 'tempo', 'year', 'genre', 'loudness', 'liveness', and others relevant for music. Each feature is scaled between 0 and 1, except 'year' which is a 4-digit number, and 'genre' which is a text string. An example user input might be: 'I want upbeat acoustic songs for working out'. An example SQL query output for this input might be: \"SELECT * FROM songs WHERE genre = 'acoustic' AND energy > 0.658 AND tempo > 0.589900517214482 AND valence > 0.6 AND liveliness < 0.226 ORDER BY popularity DESC LIMIT 10;\" KNOW: Valid genres include [('acoustic',), ('afrobeat',), ('alt-rock',), ('ambient',), ('black-metal',), ('blues',), ('breakbeat',), ('cantopop',), ('chicago-house',), ('chill',), ('classical',), ('club',), ('comedy',), ('country',), ('dance',), ('dancehall',), ('death-metal',), ('deep-house',), ('detroit-techno',), ('disco',), ('drum-and-bass',), ('dub',), ('dubstep',), ('edm',), ('electro',), ('electronic',), ('emo',), ('folk',), ('forro',), ('french',), ('funk',), ('garage',), ('german',), ('gospel',), ('goth',), ('grindcore',), ('groove',), ('guitar',), ('hard-rock',), ('hardcore',), ('hardstyle',), ('heavy-metal',), ('hip-hop',), ('house',), ('indian',), ('indie-pop',), ('industrial',), ('jazz',), ('k-pop',), ('metal',), ('metalcore',), ('minimal-techno',), ('new-age',), ('opera',), ('party',), ('piano',), ('pop',), ('pop-film',), ('power-pop',), ('progressive-house',), ('psych-rock',), ('punk',), ('punk-rock',), ('rock',), ('rock-n-roll',), ('romance',), ('sad',), ('salsa',), ('samba',), ('sertanejo',), ('show-tunes',), ('singer-songwriter',), ('ska',), ('sleep',), ('songwriter',), ('soul',), ('spanish',), ('swedish',), ('tango',), ('techno',), ('trance',), ('trip-hop',)] Do not search for genres that are not in the list. IMPORTANT: Valid SQL columns include ONLY: id INTEGER PRIMARY KEY, artist_name TEXT NOT NULL, track_name TEXT NOT NULL, track_id TEXT NOT NULL UNIQUE, popularity INTEGER, year INTEGER, genre TEXT, danceability REAL, energy REAL, key INTEGER, loudness REAL, mode INTEGER, acousticness REAL, instrumentalness REAL, liveness REAL, valence REAL, tempo REAL. Given the user query, generate a complete SQL query, be as specific as you find necessary for the query. The result should always include a LIMIT 10 clause unless otherwise specified by the user."},{"role":"user","content":"I need some deep-house from the mid-2010s that’s groovy but not overly energetic, with a slick tempo and a balanced valence to keep it feeling smooth, not dark."},{"role":"assistant","content":"SELECT * FROM songs WHERE genre = 'deep-house' AND year BETWEEN 2014 AND 2016 AND danceability > 0.5 AND energy BETWEEN 0.4 AND 0.6 AND tempo BETWEEN 0.4 AND 0.6 AND valence BETWEEN 0.4 AND 0.6 AND loudness < 0.5 ORDER BY popularity DESC LIMIT 10;\n"}]}
{"messages":[{"role":"system","content":"You are a helpful assistant that converts user song preferences into an SQL query. No other responses are needed. The query should be based on numerical feature mappings from user preferences. The features include 'danceability', 'energy', 'acousticness', 'valence', 'tempo', 'year', 'genre', 'loudness', 'liveness', and others relevant for music. Each feature is scaled between 0 and 1, except 'year' which is a 4-digit number, and 'genre' which is a text string. An example user input might be: 'I want upbeat acoustic songs for working out'. An example SQL query output for this input might be: \"SELECT * FROM songs WHERE genre = 'acoustic' AND energy > 0.658 AND tempo > 0.589900517214482 AND valence > 0.6 AND liveliness < 0.226 ORDER BY popularity DESC LIMIT 10;\" KNOW: Valid genres include [('acoustic',), ('afrobeat',), ('alt-rock',), ('ambient',), ('black-metal',), ('blues',), ('breakbeat',), ('cantopop',), ('chicago-house',), ('chill',), ('classical',), ('club',), ('comedy',), ('country',), ('dance',), ('dancehall',), ('death-metal',), ('deep-house',), ('detroit-techno',), ('disco',), ('drum-and-bass',), ('dub',), ('dubstep',), ('edm',), ('electro',), ('electronic',), ('emo',), ('folk',), ('forro',), ('french',), ('funk',), ('garage',), ('german',), ('gospel',), ('goth',), ('grindcore',), ('groove',), ('guitar',), ('hard-rock',), ('hardcore',), ('hardstyle',), ('heavy-metal',), ('hip-hop',), ('house',), ('indian',), ('indie-pop',), ('industrial',), ('jazz',), ('k-pop',), ('metal',), ('metalcore',), ('minimal-techno',), ('new-age',), ('opera',), ('party',), ('piano',), ('pop',), ('pop-film',), ('power-pop',), ('progressive-house',), ('psych-rock',), ('punk',), ('punk-rock',), ('rock',), ('rock-n-roll',), ('romance',), ('sad',), ('salsa',), ('samba',), ('sertanejo',), ('show-tunes',), ('singer-songwriter',), ('ska',), ('sleep',), ('songwriter',), ('soul',), ('spanish',), ('swedish',), ('tango',), ('techno',), ('trance',), ('trip-hop',)] Do not search for genres that are not in the list. IMPORTANT: Valid SQL columns include ONLY: id INTEGER PRIMARY KEY, artist_name TEXT NOT NULL, track_name TEXT NOT NULL, track_id TEXT NOT NULL UNIQUE, popularity INTEGER, year INTEGER, genre TEXT, danceability REAL, energy REAL, key INTEGER, loudness REAL, mode INTEGER, acousticness REAL, instrumentalness REAL, liveness REAL, valence REAL, tempo REAL. Given the user query, generate a complete SQL query, be as specific as you find necessary for the query. The result should always include a LIMIT 10 clause unless otherwise specified by the user."},{"role":"user","content":"Show me some funk tracks from the late 1970s that are somewhat danceable, have moderate energy, and a bit of acousticness, but not too bright or loud. Just something that feels cool and laid-back."},{"role":"assistant","content":"SELECT * FROM songs WHERE genre = 'funk' AND year BETWEEN 1977 AND 1979 AND danceability BETWEEN 0.4 AND 0.6 AND energy BETWEEN 0.4 AND 0.6 AND acousticness > 0.3 AND valence BETWEEN 0.4 AND 0.6 AND loudness < 0.5 ORDER BY popularity DESC LIMIT 10;\n"}]}
{"messages":[{"role":"system","content":"You are a helpful assistant that converts user song preferences into an SQL query. No other responses are needed. The query should be based on numerical feature mappings from user preferences. The features include 'danceability', 'energy', 'acousticness', 'valence', 'tempo', 'year', 'genre', 'loudness', 'liveness', and others relevant for music. Each feature is scaled between 0 and 1, except 'year' which is a 4-digit number, and 'genre' which is a text string. An example user input might be: 'I want upbeat acoustic songs for working out'. An example SQL query output for this input might be: \"SELECT * FROM songs WHERE genre = 'acoustic' AND energy > 0.658 AND tempo > 0.589900517214482 AND valence > 0.6 AND liveliness < 0.226 ORDER BY popularity DESC LIMIT 10;\" KNOW: Valid genres include [('acoustic',), ('afrobeat',), ('alt-rock',), ('ambient',), ('black-metal',), ('blues',), ('breakbeat',), ('cantopop',), ('chicago-house',), ('chill',), ('classical',), ('club',), ('comedy',), ('country',), ('dance',), ('dancehall',), ('death-metal',), ('deep-house',), ('detroit-techno',), ('disco',), ('drum-and-bass',), ('dub',), ('dubstep',), ('edm',), ('electro',), ('electronic',), ('emo',), ('folk',), ('forro',), ('french',), ('funk',), ('garage',), ('german',), ('gospel',), ('goth',), ('grindcore',), ('groove',), ('guitar',), ('hard-rock',), ('hardcore',), ('hardstyle',), ('heavy-metal',), ('hip-hop',), ('house',), ('indian',), ('indie-pop',), ('industrial',), ('jazz',), ('k-pop',), ('metal',), ('metalcore',), ('minimal-techno',), ('new-age',), ('opera',), ('party',), ('piano',), ('pop',), ('pop-film',), ('power-pop',), ('progressive-house',), ('psych-rock',), ('punk',), ('punk-rock',), ('rock',), ('rock-n-roll',), ('romance',), ('sad',), ('salsa',), ('samba',), ('sertanejo',), ('show-tunes',), ('singer-songwriter',), ('ska',), ('sleep',), ('songwriter',), ('soul',), ('spanish',), ('swedish',), ('tango',), ('techno',), ('trance',), ('trip-hop',)] Do not search for genres that are not in the list. IMPORTANT: Valid SQL columns include ONLY: id INTEGER PRIMARY KEY, artist_name TEXT NOT NULL, track_name TEXT NOT NULL, track_id TEXT NOT NULL UNIQUE, popularity INTEGER, year INTEGER, genre TEXT, danceability REAL, energy REAL, key INTEGER, loudness REAL, mode INTEGER, acousticness REAL, instrumentalness REAL, liveness REAL, valence REAL, tempo REAL. Given the user query, generate a complete SQL query, be as specific as you find necessary for the query. The result should always include a LIMIT 10 clause unless otherwise specified by the user."},{"role":"user","content":"I’m interested in minimal-techno from the early 2000s that isn’t too fast or too energetic, has a decent acoustic feel, and a touch of positive valence, but nothing too bright or bubbly."},{"role":"assistant","content":"SELECT * FROM songs WHERE genre = 'minimal-techno' AND year BETWEEN 2000 AND 2002 AND energy < 0.4 AND tempo < 0.4 AND acousticness > 0.3 AND valence BETWEEN 0.3 AND 0.5 AND loudness < 0.5 ORDER BY popularity DESC LIMIT 10;\n"}]}
{"messages":[{"role":"system","content":"You are a helpful assistant that converts user song preferences into an SQL query. No other responses are needed. The query should be based on numerical feature mappings from user preferences. The features include 'danceability', 'energy', 'acousticness', 'valence', 'tempo', 'year', 'genre', 'loudness', 'liveness', and others relevant for music. Each feature is scaled between 0 and 1, except 'year' which is a 4-digit number, and 'genre' which is a text string. An example user input might be: 'I want upbeat acoustic songs for working out'. An example SQL query output for this input might be: \"SELECT * FROM songs WHERE genre = 'acoustic' AND energy > 0.658 AND tempo > 0.589900517214482 AND valence > 0.6 AND liveliness < 0.226 ORDER BY popularity DESC LIMIT 10;\" KNOW: Valid genres include [('acoustic',), ('afrobeat',), ('alt-rock',), ('ambient',), ('black-metal',), ('blues',), ('breakbeat',), ('cantopop',), ('chicago-house',), ('chill',), ('classical',), ('club',), ('comedy',), ('country',), ('dance',), ('dancehall',), ('death-metal',), ('deep-house',), ('detroit-techno',), ('disco',), ('drum-and-bass',), ('dub',), ('dubstep',), ('edm',), ('electro',), ('electronic',), ('emo',), ('folk',), ('forro',), ('french',), ('funk',), ('garage',), ('german',), ('gospel',), ('goth',), ('grindcore',), ('groove',), ('guitar',), ('hard-rock',), ('hardcore',), ('hardstyle',), ('heavy-metal',), ('hip-hop',), ('house',), ('indian',), ('indie-pop',), ('industrial',), ('jazz',), ('k-pop',), ('metal',), ('metalcore',), ('minimal-techno',), ('new-age',), ('opera',), ('party',), ('piano',), ('pop',), ('pop-film',), ('power-pop',), ('progressive-house',), ('psych-rock',), ('punk',), ('punk-rock',), ('rock',), ('rock-n-roll',), ('romance',), ('sad',), ('salsa',), ('samba',), ('sertanejo',), ('show-tunes',), ('singer-songwriter',), ('ska',), ('sleep',), ('songwriter',), ('soul',), ('spanish',), ('swedish',), ('tango',), ('techno',), ('trance',), ('trip-hop',)] Do not search for genres that are not in the list. IMPORTANT: Valid SQL columns include ONLY: id INTEGER PRIMARY KEY, artist_name TEXT NOT NULL, track_name TEXT NOT NULL, track_id TEXT NOT NULL UNIQUE, popularity INTEGER, year INTEGER, genre TEXT, danceability REAL, energy REAL, key INTEGER, loudness REAL, mode INTEGER, acousticness REAL, instrumentalness REAL, liveness REAL, valence REAL, tempo REAL. Given the user query, generate a complete SQL query, be as specific as you find necessary for the query. The result should always include a LIMIT 10 clause unless otherwise specified by the user."},{"role":"user","content":"Could you show me some samba tunes from the late 1980s that have a gentle acoustic vibe, moderate danceability, and a pleasant valence? Nothing too high-energy or loud, just a nice background groove."},{"role":"assistant","content":"SELECT * FROM songs WHERE genre = 'samba' AND year BETWEEN 1987 AND 1989 AND acousticness > 0.4 AND danceability BETWEEN 0.4 AND 0.6 AND valence > 0.4 AND energy < 0.4 AND loudness < 0.5 ORDER BY popularity DESC LIMIT 10;\n"}]}
{"messages":[{"role":"system","content":"You are a helpful assistant that converts user song preferences into an SQL query. No other responses are needed. The query should be based on numerical feature mappings from user preferences. The features include 'danceability', 'energy', 'acousticness', 'valence', 'tempo', 'year', 'genre', 'loudness', 'liveness', and others relevant for music. Each feature is scaled between 0 and 1, except 'year' which is a 4-digit number, and 'genre' which is a text string. An example user input might be: 'I want upbeat acoustic songs for working out'. An example SQL query output for this input might be: \"SELECT * FROM songs WHERE genre = 'acoustic' AND energy > 0.658 AND tempo > 0.589900517214482 AND valence > 0.6 AND liveliness < 0.226 ORDER BY popularity DESC LIMIT 10;\" KNOW: Valid genres include [('acoustic',), ('afrobeat',), ('alt-rock',), ('ambient',), ('black-metal',), ('blues',), ('breakbeat',), ('cantopop',), ('chicago-house',), ('chill',), ('classical',), ('club',), ('comedy',), ('country',), ('dance',), ('dancehall',), ('death-metal',), ('deep-house',), ('detroit-techno',), ('disco',), ('drum-and-bass',), ('dub',), ('dubstep',), ('edm',), ('electro',), ('electronic',), ('emo',), ('folk',), ('forro',), ('french',), ('funk',), ('garage',), ('german',), ('gospel',), ('goth',), ('grindcore',), ('groove',), ('guitar',), ('hard-rock',), ('hardcore',), ('hardstyle',), ('heavy-metal',), ('hip-hop',), ('house',), ('indian',), ('indie-pop',), ('industrial',), ('jazz',), ('k-pop',), ('metal',), ('metalcore',), ('minimal-techno',), ('new-age',), ('opera',), ('party',), ('piano',), ('pop',), ('pop-film',), ('power-pop',), ('progressive-house',), ('psych-rock',), ('punk',), ('punk-rock',), ('rock',), ('rock-n-roll',), ('romance',), ('sad',), ('salsa',), ('samba',), ('sertanejo',), ('show-tunes',), ('singer-songwriter',), ('ska',), ('sleep',), ('songwriter',), ('soul',), ('spanish',), ('swedish',), ('tango',), ('techno',), ('trance',), ('trip-hop',)] Do not search for genres that are not in the list. IMPORTANT: Valid SQL columns include ONLY: id INTEGER PRIMARY KEY, artist_name TEXT NOT NULL, track_name TEXT NOT NULL, track_id TEXT NOT NULL UNIQUE, popularity INTEGER, year INTEGER, genre TEXT, danceability REAL, energy REAL, key INTEGER, loudness REAL, mode INTEGER, acousticness REAL, instrumentalness REAL, liveness REAL, valence REAL, tempo REAL. Given the user query, generate a complete SQL query, be as specific as you find necessary for the query. The result should always include a LIMIT 10 clause unless otherwise specified by the user."},{"role":"user","content":"I’m looking for some mellow jazz tracks from the early 2010s that aren’t too energetic, have a hint of acousticness, and a moderate valence, something subtle for a quiet evening."},{"role":"assistant","content":"SELECT * FROM songs WHERE genre = 'jazz' AND year BETWEEN 2010 AND 2012 AND energy < 0.4 AND acousticness > 0.3 AND valence BETWEEN 0.4 AND 0.6 AND loudness < 0.5 ORDER BY popularity DESC LIMIT 10;\n"}]}
{"messages":[{"role":"system","content":"You are a helpful assistant that converts user song preferences into an SQL query. No other responses are needed. The query should be based on numerical feature mappings from user preferences. The features include 'danceability', 'energy', 'acousticness', 'valence', 'tempo', 'year', 'genre', 'loudness', 'liveness', and others relevant for music. Each feature is scaled between 0 and 1, except 'year' which is a 4-digit number, and 'genre' which is a text string. An example user input might be: 'I want upbeat acoustic songs for working out'. An example SQL query output for this input might be: \"SELECT * FROM songs WHERE genre = 'acoustic' AND energy > 0.658 AND tempo > 0.589900517214482 AND valence > 0.6 AND liveliness < 0.226 ORDER BY popularity DESC LIMIT 10;\" KNOW: Valid genres include [('acoustic',), ('afrobeat',), ('alt-rock',), ('ambient',), ('black-metal',), ('blues',), ('breakbeat',), ('cantopop',), ('chicago-house',), ('chill',), ('classical',), ('club',), ('comedy',), ('country',), ('dance',), ('dancehall',), ('death-metal',), ('deep-house',), ('detroit-techno',), ('disco',), ('drum-and-bass',), ('dub',), ('dubstep',), ('edm',), ('electro',), ('electronic',), ('emo',), ('folk',), ('forro',), ('french',), ('funk',), ('garage',), ('german',), ('gospel',), ('goth',), ('grindcore',), ('groove',), ('guitar',), ('hard-rock',), ('hardcore',), ('hardstyle',), ('heavy-metal',), ('hip-hop',), ('house',), ('indian',), ('indie-pop',), ('industrial',), ('jazz',), ('k-pop',), ('metal',), ('metalcore',), ('minimal-techno',), ('new-age',), ('opera',), ('party',), ('piano',), ('pop',), ('pop-film',), ('power-pop',), ('progressive-house',), ('psych-rock',), ('punk',), ('punk-rock',), ('rock',), ('rock-n-roll',), ('romance',), ('sad',), ('salsa',), ('samba',), ('sertanejo',), ('show-tunes',), ('singer-songwriter',), ('ska',), ('sleep',), ('songwriter',), ('soul',), ('spanish',), ('swedish',), ('tango',), ('techno',), ('trance',), ('trip-hop',)] Do not search for genres that are not in the list. IMPORTANT: Valid SQL columns include ONLY: id INTEGER PRIMARY KEY, artist_name TEXT NOT NULL, track_name TEXT NOT NULL, track_id TEXT NOT NULL UNIQUE, popularity INTEGER, year INTEGER, genre TEXT, danceability REAL, energy REAL, key INTEGER, loudness REAL, mode INTEGER, acousticness REAL, instrumentalness REAL, liveness REAL, valence REAL, tempo REAL. Given the user query, generate a complete SQL query, be as specific as you find necessary for the query. The result should always include a LIMIT 10 clause unless otherwise specified by the user."},{"role":"user","content":"Could you find me some indie-pop tunes from the late 2010s that are fairly danceable, not too loud, and have a balanced valence, something that keeps a relaxed but upbeat mood?"},{"role":"assistant","content":"SELECT * FROM songs WHERE genre = 'indie-pop' AND year BETWEEN 2017 AND 2019 AND danceability > 0.5 AND loudness < 0.5 AND valence BETWEEN 0.4 AND 0.6 AND energy < 0.5 ORDER BY popularity DESC LIMIT 10;\n"}]}
{"messages":[{"role":"system","content":"You are a helpful assistant that converts user song preferences into an SQL query. No other responses are needed. The query should be based on numerical feature mappings from user preferences. The features include 'danceability', 'energy', 'acousticness', 'valence', 'tempo', 'year', 'genre', 'loudness', 'liveness', and others relevant for music. Each feature is scaled between 0 and 1, except 'year' which is a 4-digit number, and 'genre' which is a text string. An example user input might be: 'I want upbeat acoustic songs for working out'. An example SQL query output for this input might be: \"SELECT * FROM songs WHERE genre = 'acoustic' AND energy > 0.658 AND tempo > 0.589900517214482 AND valence > 0.6 AND liveliness < 0.226 ORDER BY popularity DESC LIMIT 10;\" KNOW: Valid genres include [('acoustic',), ('afrobeat',), ('alt-rock',), ('ambient',), ('black-metal',), ('blues',), ('breakbeat',), ('cantopop',), ('chicago-house',), ('chill',), ('classical',), ('club',), ('comedy',), ('country',), ('dance',), ('dancehall',), ('death-metal',), ('deep-house',), ('detroit-techno',), ('disco',), ('drum-and-bass',), ('dub',), ('dubstep',), ('edm',), ('electro',), ('electronic',), ('emo',), ('folk',), ('forro',), ('french',), ('funk',), ('garage',), ('german',), ('gospel',), ('goth',), ('grindcore',), ('groove',), ('guitar',), ('hard-rock',), ('hardcore',), ('hardstyle',), ('heavy-metal',), ('hip-hop',), ('house',), ('indian',), ('indie-pop',), ('industrial',), ('jazz',), ('k-pop',), ('metal',), ('metalcore',), ('minimal-techno',), ('new-age',), ('opera',), ('party',), ('piano',), ('pop',), ('pop-film',), ('power-pop',), ('progressive-house',), ('psych-rock',), ('punk',), ('punk-rock',), ('rock',), ('rock-n-roll',), ('romance',), ('sad',), ('salsa',), ('samba',), ('sertanejo',), ('show-tunes',), ('singer-songwriter',), ('ska',), ('sleep',), ('songwriter',), ('soul',), ('spanish',), ('swedish',), ('tango',), ('techno',), ('trance',), ('trip-hop',)] Do not search for genres that are not in the list. IMPORTANT: Valid SQL columns include ONLY: id INTEGER PRIMARY KEY, artist_name TEXT NOT NULL, track_name TEXT NOT NULL, track_id TEXT NOT NULL UNIQUE, popularity INTEGER, year INTEGER, genre TEXT, danceability REAL, energy REAL, key INTEGER, loudness REAL, mode INTEGER, acousticness REAL, instrumentalness REAL, liveness REAL, valence REAL, tempo REAL. Given the user query, generate a complete SQL query, be as specific as you find necessary for the query. The result should always include a LIMIT 10 clause unless otherwise specified by the user."},{"role":"user","content":"I’d love some chill ambient tracks from the mid-2000s that have very low energy, a gentle acoustic profile, and a soothing valence level, perfect for meditation or reading quietly."},{"role":"assistant","content":"SELECT * FROM songs WHERE genre = 'ambient' AND year BETWEEN 2004 AND 2006 AND energy < 0.3 AND acousticness > 0.5 AND valence > 0.4 AND tempo < 0.4 AND loudness < 0.4 ORDER BY popularity DESC LIMIT 10;\n"}]}
{"messages":[{"role":"system","content":"You are a helpful assistant that converts user song preferences into an SQL query. No other responses are needed. The query should be based on numerical feature mappings from user preferences. The features include 'danceability', 'energy', 'acousticness', 'valence', 'tempo', 'year', 'genre', 'loudness', 'liveness', and others relevant for music. Each feature is scaled between 0 and 1, except 'year' which is a 4-digit number, and 'genre' which is a text string. An example user input might be: 'I want upbeat acoustic songs for working out'. An example SQL query output for this input might be: \"SELECT * FROM songs WHERE genre = 'acoustic' AND energy > 0.658 AND tempo > 0.589900517214482 AND valence > 0.6 AND liveliness < 0.226 ORDER BY popularity DESC LIMIT 10;\" KNOW: Valid genres include [('acoustic',), ('afrobeat',), ('alt-rock',), ('ambient',), ('black-metal',), ('blues',), ('breakbeat',), ('cantopop',), ('chicago-house',), ('chill',), ('classical',), ('club',), ('comedy',), ('country',), ('dance',), ('dancehall',), ('death-metal',), ('deep-house',), ('detroit-techno',), ('disco',), ('drum-and-bass',), ('dub',), ('dubstep',), ('edm',), ('electro',), ('electronic',), ('emo',), ('folk',), ('forro',), ('french',), ('funk',), ('garage',), ('german',), ('gospel',), ('goth',), ('grindcore',), ('groove',), ('guitar',), ('hard-rock',), ('hardcore',), ('hardstyle',), ('heavy-metal',), ('hip-hop',), ('house',), ('indian',), ('indie-pop',), ('industrial',), ('jazz',), ('k-pop',), ('metal',), ('metalcore',), ('minimal-techno',), ('new-age',), ('opera',), ('party',), ('piano',), ('pop',), ('pop-film',), ('power-pop',), ('progressive-house',), ('psych-rock',), ('punk',), ('punk-rock',), ('rock',), ('rock-n-roll',), ('romance',), ('sad',), ('salsa',), ('samba',), ('sertanejo',), ('show-tunes',), ('singer-songwriter',), ('ska',), ('sleep',), ('songwriter',), ('soul',), ('spanish',), ('swedish',), ('tango',), ('techno',), ('trance',), ('trip-hop',)] Do not search for genres that are not in the list. IMPORTANT: Valid SQL columns include ONLY: id INTEGER PRIMARY KEY, artist_name TEXT NOT NULL, track_name TEXT NOT NULL, track_id TEXT NOT NULL UNIQUE, popularity INTEGER, year INTEGER, genre TEXT, danceability REAL, energy REAL, key INTEGER, loudness REAL, mode INTEGER, acousticness REAL, instrumentalness REAL, liveness REAL, valence REAL, tempo REAL. Given the user query, generate a complete SQL query, be as specific as you find necessary for the query. The result should always include a LIMIT 10 clause unless otherwise specified by the user."},{"role":"user","content":"Show me some house tracks from the early 2020s that are moderately danceable, not overly energetic, and have a subtle acoustic element. Just something to keep people moving gently."},{"role":"assistant","content":"SELECT * FROM songs WHERE genre = 'house' AND year BETWEEN 2020 AND 2022 AND danceability BETWEEN 0.5 AND 0.7 AND energy < 0.5 AND acousticness > 0.3 AND valence > 0.4 ORDER BY popularity DESC LIMIT 10;\n"}]}
{"messages":[{"role":"system","content":"You are a helpful assistant that converts user song preferences into an SQL query. No other responses are needed. The query should be based on numerical feature mappings from user preferences. The features include 'danceability', 'energy', 'acousticness', 'valence', 'tempo', 'year', 'genre', 'loudness', 'liveness', and others relevant for music. Each feature is scaled between 0 and 1, except 'year' which is a 4-digit number, and 'genre' which is a text string. An example user input might be: 'I want upbeat acoustic songs for working out'. An example SQL query output for this input might be: \"SELECT * FROM songs WHERE genre = 'acoustic' AND energy > 0.658 AND tempo > 0.589900517214482 AND valence > 0.6 AND liveliness < 0.226 ORDER BY popularity DESC LIMIT 10;\" KNOW: Valid genres include [('acoustic',), ('afrobeat',), ('alt-rock',), ('ambient',), ('black-metal',), ('blues',), ('breakbeat',), ('cantopop',), ('chicago-house',), ('chill',), ('classical',), ('club',), ('comedy',), ('country',), ('dance',), ('dancehall',), ('death-metal',), ('deep-house',), ('detroit-techno',), ('disco',), ('drum-and-bass',), ('dub',), ('dubstep',), ('edm',), ('electro',), ('electronic',), ('emo',), ('folk',), ('forro',), ('french',), ('funk',), ('garage',), ('german',), ('gospel',), ('goth',), ('grindcore',), ('groove',), ('guitar',), ('hard-rock',), ('hardcore',), ('hardstyle',), ('heavy-metal',), ('hip-hop',), ('house',), ('indian',), ('indie-pop',), ('industrial',), ('jazz',), ('k-pop',), ('metal',), ('metalcore',), ('minimal-techno',), ('new-age',), ('opera',), ('party',), ('piano',), ('pop',), ('pop-film',), ('power-pop',), ('progressive-house',), ('psych-rock',), ('punk',), ('punk-rock',), ('rock',), ('rock-n-roll',), ('romance',), ('sad',), ('salsa',), ('samba',), ('sertanejo',), ('show-tunes',), ('singer-songwriter',), ('ska',), ('sleep',), ('songwriter',), ('soul',), ('spanish',), ('swedish',), ('tango',), ('techno',), ('trance',), ('trip-hop',)] Do not search for genres that are not in the list. IMPORTANT: Valid SQL columns include ONLY: id INTEGER PRIMARY KEY, artist_name TEXT NOT NULL, track_name TEXT NOT NULL, track_id TEXT NOT NULL UNIQUE, popularity INTEGER, year INTEGER, genre TEXT, danceability REAL, energy REAL, key INTEGER, loudness REAL, mode INTEGER, acousticness REAL, instrumentalness REAL, liveness REAL, valence REAL, tempo REAL. Given the user query, generate a complete SQL query, be as specific as you find necessary for the query. The result should always include a LIMIT 10 clause unless otherwise specified by the user."},{"role":"user","content":"I’m interested in some funk tracks from the late 1970s that have a cool groove, moderate danceability, not too energetic, and a dash of acousticness. Something that feels laid-back."},{"role":"assistant","content":"SELECT * FROM songs WHERE genre = 'funk' AND year BETWEEN 1977 AND 1979 AND danceability BETWEEN 0.4 AND 0.6 AND energy < 0.5 AND acousticness > 0.3 AND valence BETWEEN 0.4 AND 0.6 AND loudness < 0.5 ORDER BY popularity DESC LIMIT 10;\n"}]}
{"messages":[{"role":"system","content":"You are a helpful assistant that converts user song preferences into an SQL query. No other responses are needed. The query should be based on numerical feature mappings from user preferences. The features include 'danceability', 'energy', 'acousticness', 'valence', 'tempo', 'year', 'genre', 'loudness', 'liveness', and others relevant for music. Each feature is scaled between 0 and 1, except 'year' which is a 4-digit number, and 'genre' which is a text string. An example user input might be: 'I want upbeat acoustic songs for working out'. An example SQL query output for this input might be: \"SELECT * FROM songs WHERE genre = 'acoustic' AND energy > 0.658 AND tempo > 0.589900517214482 AND valence > 0.6 AND liveliness < 0.226 ORDER BY popularity DESC LIMIT 10;\" KNOW: Valid genres include [('acoustic',), ('afrobeat',), ('alt-rock',), ('ambient',), ('black-metal',), ('blues',), ('breakbeat',), ('cantopop',), ('chicago-house',), ('chill',), ('classical',), ('club',), ('comedy',), ('country',), ('dance',), ('dancehall',), ('death-metal',), ('deep-house',), ('detroit-techno',), ('disco',), ('drum-and-bass',), ('dub',), ('dubstep',), ('edm',), ('electro',), ('electronic',), ('emo',), ('folk',), ('forro',), ('french',), ('funk',), ('garage',), ('german',), ('gospel',), ('goth',), ('grindcore',), ('groove',), ('guitar',), ('hard-rock',), ('hardcore',), ('hardstyle',), ('heavy-metal',), ('hip-hop',), ('house',), ('indian',), ('indie-pop',), ('industrial',), ('jazz',), ('k-pop',), ('metal',), ('metalcore',), ('minimal-techno',), ('new-age',), ('opera',), ('party',), ('piano',), ('pop',), ('pop-film',), ('power-pop',), ('progressive-house',), ('psych-rock',), ('punk',), ('punk-rock',), ('rock',), ('rock-n-roll',), ('romance',), ('sad',), ('salsa',), ('samba',), ('sertanejo',), ('show-tunes',), ('singer-songwriter',), ('ska',), ('sleep',), ('songwriter',), ('soul',), ('spanish',), ('swedish',), ('tango',), ('techno',), ('trance',), ('trip-hop',)] Do not search for genres that are not in the list. IMPORTANT: Valid SQL columns include ONLY: id INTEGER PRIMARY KEY, artist_name TEXT NOT NULL, track_name TEXT NOT NULL, track_id TEXT NOT NULL UNIQUE, popularity INTEGER, year INTEGER, genre TEXT, danceability REAL, energy REAL, key INTEGER, loudness REAL, mode INTEGER, acousticness REAL, instrumentalness REAL, liveness REAL, valence REAL, tempo REAL. Given the user query, generate a complete SQL query, be as specific as you find necessary for the query. The result should always include a LIMIT 10 clause unless otherwise specified by the user."},{"role":"user","content":"Can we get some piano tunes from the mid-1990s that are calm, low in energy, and have a pleasant valence, something that’s neither too slow nor too energetic?"},{"role":"assistant","content":"SELECT * FROM songs WHERE genre = 'piano' AND year BETWEEN 1995 AND 1997 AND energy < 0.4 AND valence BETWEEN 0.4 AND 0.6 AND tempo BETWEEN 0.4 AND 0.5 AND loudness < 0.5 ORDER BY popularity DESC LIMIT 10;\n"}]}
{"messages":[{"role":"system","content":"You are a helpful assistant that converts user song preferences into an SQL query. No other responses are needed. The query should be based on numerical feature mappings from user preferences. The features include 'danceability', 'energy', 'acousticness', 'valence', 'tempo', 'year', 'genre', 'loudness', 'liveness', and others relevant for music. Each feature is scaled between 0 and 1, except 'year' which is a 4-digit number, and 'genre' which is a text string. An example user input might be: 'I want upbeat acoustic songs for working out'. An example SQL query output for this input might be: \"SELECT * FROM songs WHERE genre = 'acoustic' AND energy > 0.658 AND tempo > 0.589900517214482 AND valence > 0.6 AND liveliness < 0.226 ORDER BY popularity DESC LIMIT 10;\" KNOW: Valid genres include [('acoustic',), ('afrobeat',), ('alt-rock',), ('ambient',), ('black-metal',), ('blues',), ('breakbeat',), ('cantopop',), ('chicago-house',), ('chill',), ('classical',), ('club',), ('comedy',), ('country',), ('dance',), ('dancehall',), ('death-metal',), ('deep-house',), ('detroit-techno',), ('disco',), ('drum-and-bass',), ('dub',), ('dubstep',), ('edm',), ('electro',), ('electronic',), ('emo',), ('folk',), ('forro',), ('french',), ('funk',), ('garage',), ('german',), ('gospel',), ('goth',), ('grindcore',), ('groove',), ('guitar',), ('hard-rock',), ('hardcore',), ('hardstyle',), ('heavy-metal',), ('hip-hop',), ('house',), ('indian',), ('indie-pop',), ('industrial',), ('jazz',), ('k-pop',), ('metal',), ('metalcore',), ('minimal-techno',), ('new-age',), ('opera',), ('party',), ('piano',), ('pop',), ('pop-film',), ('power-pop',), ('progressive-house',), ('psych-rock',), ('punk',), ('punk-rock',), ('rock',), ('rock-n-roll',), ('romance',), ('sad',), ('salsa',), ('samba',), ('sertanejo',), ('show-tunes',), ('singer-songwriter',), ('ska',), ('sleep',), ('songwriter',), ('soul',), ('spanish',), ('swedish',), ('tango',), ('techno',), ('trance',), ('trip-hop',)] Do not search for genres that are not in the list. IMPORTANT: Valid SQL columns include ONLY: id INTEGER PRIMARY KEY, artist_name TEXT NOT NULL, track_name TEXT NOT NULL, track_id TEXT NOT NULL UNIQUE, popularity INTEGER, year INTEGER, genre TEXT, danceability REAL, energy REAL, key INTEGER, loudness REAL, mode INTEGER, acousticness REAL, instrumentalness REAL, liveness REAL, valence REAL, tempo REAL. Given the user query, generate a complete SQL query, be as specific as you find necessary for the query. The result should always include a LIMIT 10 clause unless otherwise specified by the user."},{"role":"user","content":"Find me some soul music from the late 1980s that has a gentle groove, moderate danceability, and isn’t too loud. Just something that feels soothing and heartfelt."},{"role":"assistant","content":"SELECT * FROM songs WHERE genre = 'soul' AND year BETWEEN 1987 AND 1989 AND danceability BETWEEN 0.4 AND 0.6 AND energy < 0.5 AND acousticness > 0.3 AND valence > 0.4 AND loudness < 0.5 ORDER BY popularity DESC LIMIT 10;\n"}]}
{"messages":[{"role":"system","content":"You are a helpful assistant that converts user song preferences into an SQL query. No other responses are needed. The query should be based on numerical feature mappings from user preferences. The features include 'danceability', 'energy', 'acousticness', 'valence', 'tempo', 'year', 'genre', 'loudness', 'liveness', and others relevant for music. Each feature is scaled between 0 and 1, except 'year' which is a 4-digit number, and 'genre' which is a text string. An example user input might be: 'I want upbeat acoustic songs for working out'. An example SQL query output for this input might be: \"SELECT * FROM songs WHERE genre = 'acoustic' AND energy > 0.658 AND tempo > 0.589900517214482 AND valence > 0.6 AND liveliness < 0.226 ORDER BY popularity DESC LIMIT 10;\" KNOW: Valid genres include [('acoustic',), ('afrobeat',), ('alt-rock',), ('ambient',), ('black-metal',), ('blues',), ('breakbeat',), ('cantopop',), ('chicago-house',), ('chill',), ('classical',), ('club',), ('comedy',), ('country',), ('dance',), ('dancehall',), ('death-metal',), ('deep-house',), ('detroit-techno',), ('disco',), ('drum-and-bass',), ('dub',), ('dubstep',), ('edm',), ('electro',), ('electronic',), ('emo',), ('folk',), ('forro',), ('french',), ('funk',), ('garage',), ('german',), ('gospel',), ('goth',), ('grindcore',), ('groove',), ('guitar',), ('hard-rock',), ('hardcore',), ('hardstyle',), ('heavy-metal',), ('hip-hop',), ('house',), ('indian',), ('indie-pop',), ('industrial',), ('jazz',), ('k-pop',), ('metal',), ('metalcore',), ('minimal-techno',), ('new-age',), ('opera',), ('party',), ('piano',), ('pop',), ('pop-film',), ('power-pop',), ('progressive-house',), ('psych-rock',), ('punk',), ('punk-rock',), ('rock',), ('rock-n-roll',), ('romance',), ('sad',), ('salsa',), ('samba',), ('sertanejo',), ('show-tunes',), ('singer-songwriter',), ('ska',), ('sleep',), ('songwriter',), ('soul',), ('spanish',), ('swedish',), ('tango',), ('techno',), ('trance',), ('trip-hop',)] Do not search for genres that are not in the list. IMPORTANT: Valid SQL columns include ONLY: id INTEGER PRIMARY KEY, artist_name TEXT NOT NULL, track_name TEXT NOT NULL, track_id TEXT NOT NULL UNIQUE, popularity INTEGER, year INTEGER, genre TEXT, danceability REAL, energy REAL, key INTEGER, loudness REAL, mode INTEGER, acousticness REAL, instrumentalness REAL, liveness REAL, valence REAL, tempo REAL. Given the user query, generate a complete SQL query, be as specific as you find necessary for the query. The result should always include a LIMIT 10 clause unless otherwise specified by the user."},{"role":"user","content":"Find me some detroit-techno tracks from the mid-1990s that have a subtle groove, not too loud or fast, and a moderate valence. Something that’s interesting but not too aggressive."},{"role":"assistant","content":"SELECT * FROM songs WHERE genre = 'detroit-techno' AND year BETWEEN 1994 AND 1996 AND energy < 0.5 AND tempo BETWEEN 0.4 AND 0.6 AND valence BETWEEN 0.4 AND 0.6 AND loudness < 0.5 ORDER BY popularity DESC LIMIT 10;\n"}]}
{"messages":[{"role":"system","content":"You are a helpful assistant that converts user song preferences into an SQL query. No other responses are needed. The query should be based on numerical feature mappings from user preferences. The features include 'danceability', 'energy', 'acousticness', 'valence', 'tempo', 'year', 'genre', 'loudness', 'liveness', and others relevant for music. Each feature is scaled between 0 and 1, except 'year' which is a 4-digit number, and 'genre' which is a text string. An example user input might be: 'I want upbeat acoustic songs for working out'. An example SQL query output for this input might be: \"SELECT * FROM songs WHERE genre = 'acoustic' AND energy > 0.658 AND tempo > 0.589900517214482 AND valence > 0.6 AND liveliness < 0.226 ORDER BY popularity DESC LIMIT 10;\" KNOW: Valid genres include [('acoustic',), ('afrobeat',), ('alt-rock',), ('ambient',), ('black-metal',), ('blues',), ('breakbeat',), ('cantopop',), ('chicago-house',), ('chill',), ('classical',), ('club',), ('comedy',), ('country',), ('dance',), ('dancehall',), ('death-metal',), ('deep-house',), ('detroit-techno',), ('disco',), ('drum-and-bass',), ('dub',), ('dubstep',), ('edm',), ('electro',), ('electronic',), ('emo',), ('folk',), ('forro',), ('french',), ('funk',), ('garage',), ('german',), ('gospel',), ('goth',), ('grindcore',), ('groove',), ('guitar',), ('hard-rock',), ('hardcore',), ('hardstyle',), ('heavy-metal',), ('hip-hop',), ('house',), ('indian',), ('indie-pop',), ('industrial',), ('jazz',), ('k-pop',), ('metal',), ('metalcore',), ('minimal-techno',), ('new-age',), ('opera',), ('party',), ('piano',), ('pop',), ('pop-film',), ('power-pop',), ('progressive-house',), ('psych-rock',), ('punk',), ('punk-rock',), ('rock',), ('rock-n-roll',), ('romance',), ('sad',), ('salsa',), ('samba',), ('sertanejo',), ('show-tunes',), ('singer-songwriter',), ('ska',), ('sleep',), ('songwriter',), ('soul',), ('spanish',), ('swedish',), ('tango',), ('techno',), ('trance',), ('trip-hop',)] Do not search for genres that are not in the list. IMPORTANT: Valid SQL columns include ONLY: id INTEGER PRIMARY KEY, artist_name TEXT NOT NULL, track_name TEXT NOT NULL, track_id TEXT NOT NULL UNIQUE, popularity INTEGER, year INTEGER, genre TEXT, danceability REAL, energy REAL, key INTEGER, loudness REAL, mode INTEGER, acousticness REAL, instrumentalness REAL, liveness REAL, valence REAL, tempo REAL. Given the user query, generate a complete SQL query, be as specific as you find necessary for the query. The result should always include a LIMIT 10 clause unless otherwise specified by the user."},{"role":"user","content":"Could you recommend some obscure breakbeat tracks from the mid-1990s that feel like drifting through a hidden rainforest temple—soft acoustic hints, moderate tempo, but with a subtle, mysterious energy?"},{"role":"assistant","content":"SELECT * FROM songs WHERE genre = 'breakbeat' AND year BETWEEN 1994 AND 1996 AND acousticness > 0.3 AND tempo BETWEEN 0.4 AND 0.6 AND energy BETWEEN 0.4 AND 0.5 AND valence BETWEEN 0.4 AND 0.5 AND loudness < 0.5 ORDER BY popularity DESC LIMIT 10;\n"}]}
{"messages":[{"role":"system","content":"You are a helpful assistant that converts user song preferences into an SQL query. No other responses are needed. The query should be based on numerical feature mappings from user preferences. The features include 'danceability', 'energy', 'acousticness', 'valence', 'tempo', 'year', 'genre', 'loudness', 'liveness', and others relevant for music. Each feature is scaled between 0 and 1, except 'year' which is a 4-digit number, and 'genre' which is a text string. An example user input might be: 'I want upbeat acoustic songs for working out'. An example SQL query output for this input might be: \"SELECT * FROM songs WHERE genre = 'acoustic' AND energy > 0.658 AND tempo > 0.589900517214482 AND valence > 0.6 AND liveliness < 0.226 ORDER BY popularity DESC LIMIT 10;\" KNOW: Valid genres include [('acoustic',), ('afrobeat',), ('alt-rock',), ('ambient',), ('black-metal',), ('blues',), ('breakbeat',), ('cantopop',), ('chicago-house',), ('chill',), ('classical',), ('club',), ('comedy',), ('country',), ('dance',), ('dancehall',), ('death-metal',), ('deep-house',), ('detroit-techno',), ('disco',), ('drum-and-bass',), ('dub',), ('dubstep',), ('edm',), ('electro',), ('electronic',), ('emo',), ('folk',), ('forro',), ('french',), ('funk',), ('garage',), ('german',), ('gospel',), ('goth',), ('grindcore',), ('groove',), ('guitar',), ('hard-rock',), ('hardcore',), ('hardstyle',), ('heavy-metal',), ('hip-hop',), ('house',), ('indian',), ('indie-pop',), ('industrial',), ('jazz',), ('k-pop',), ('metal',), ('metalcore',), ('minimal-techno',), ('new-age',), ('opera',), ('party',), ('piano',), ('pop',), ('pop-film',), ('power-pop',), ('progressive-house',), ('psych-rock',), ('punk',), ('punk-rock',), ('rock',), ('rock-n-roll',), ('romance',), ('sad',), ('salsa',), ('samba',), ('sertanejo',), ('show-tunes',), ('singer-songwriter',), ('ska',), ('sleep',), ('songwriter',), ('soul',), ('spanish',), ('swedish',), ('tango',), ('techno',), ('trance',), ('trip-hop',)] Do not search for genres that are not in the list. IMPORTANT: Valid SQL columns include ONLY: id INTEGER PRIMARY KEY, artist_name TEXT NOT NULL, track_name TEXT NOT NULL, track_id TEXT NOT NULL UNIQUE, popularity INTEGER, year INTEGER, genre TEXT, danceability REAL, energy REAL, key INTEGER, loudness REAL, mode INTEGER, acousticness REAL, instrumentalness REAL, liveness REAL, valence REAL, tempo REAL. Given the user query, generate a complete SQL query, be as specific as you find necessary for the query. The result should always include a LIMIT 10 clause unless otherwise specified by the user."},{"role":"user","content":"I’m looking for minimal-techno pieces from the early 2000s that evoke the image of dim neon corridors—very low energy, gently pulsing beats, and a whisper of acousticness, like mechanical chimes in the darkness."},{"role":"assistant","content":"SELECT * FROM songs WHERE genre = 'minimal-techno' AND year BETWEEN 2000 AND 2002 AND energy < 0.3 AND tempo < 0.5 AND acousticness > 0.3 AND valence BETWEEN 0.3 AND 0.4 AND loudness < 0.4 ORDER BY popularity DESC LIMIT 10;\n"}]}
{"messages":[{"role":"system","content":"You are a helpful assistant that converts user song preferences into an SQL query. No other responses are needed. The query should be based on numerical feature mappings from user preferences. The features include 'danceability', 'energy', 'acousticness', 'valence', 'tempo', 'year', 'genre', 'loudness', 'liveness', and others relevant for music. Each feature is scaled between 0 and 1, except 'year' which is a 4-digit number, and 'genre' which is a text string. An example user input might be: 'I want upbeat acoustic songs for working out'. An example SQL query output for this input might be: \"SELECT * FROM songs WHERE genre = 'acoustic' AND energy > 0.658 AND tempo > 0.589900517214482 AND valence > 0.6 AND liveliness < 0.226 ORDER BY popularity DESC LIMIT 10;\" KNOW: Valid genres include [('acoustic',), ('afrobeat',), ('alt-rock',), ('ambient',), ('black-metal',), ('blues',), ('breakbeat',), ('cantopop',), ('chicago-house',), ('chill',), ('classical',), ('club',), ('comedy',), ('country',), ('dance',), ('dancehall',), ('death-metal',), ('deep-house',), ('detroit-techno',), ('disco',), ('drum-and-bass',), ('dub',), ('dubstep',), ('edm',), ('electro',), ('electronic',), ('emo',), ('folk',), ('forro',), ('french',), ('funk',), ('garage',), ('german',), ('gospel',), ('goth',), ('grindcore',), ('groove',), ('guitar',), ('hard-rock',), ('hardcore',), ('hardstyle',), ('heavy-metal',), ('hip-hop',), ('house',), ('indian',), ('indie-pop',), ('industrial',), ('jazz',), ('k-pop',), ('metal',), ('metalcore',), ('minimal-techno',), ('new-age',), ('opera',), ('party',), ('piano',), ('pop',), ('pop-film',), ('power-pop',), ('progressive-house',), ('psych-rock',), ('punk',), ('punk-rock',), ('rock',), ('rock-n-roll',), ('romance',), ('sad',), ('salsa',), ('samba',), ('sertanejo',), ('show-tunes',), ('singer-songwriter',), ('ska',), ('sleep',), ('songwriter',), ('soul',), ('spanish',), ('swedish',), ('tango',), ('techno',), ('trance',), ('trip-hop',)] Do not search for genres that are not in the list. IMPORTANT: Valid SQL columns include ONLY: id INTEGER PRIMARY KEY, artist_name TEXT NOT NULL, track_name TEXT NOT NULL, track_id TEXT NOT NULL UNIQUE, popularity INTEGER, year INTEGER, genre TEXT, danceability REAL, energy REAL, key INTEGER, loudness REAL, mode INTEGER, acousticness REAL, instrumentalness REAL, liveness REAL, valence REAL, tempo REAL. Given the user query, generate a complete SQL query, be as specific as you find necessary for the query. The result should always include a LIMIT 10 clause unless otherwise specified by the user."},{"role":"user","content":"I’d love some swedish tracks from the early 2010s that feel like an afternoon studying old manuscripts in a sunlit attic—moderate acousticness, low energy, subtle positivity, and gentle danceability."},{"role":"assistant","content":"SELECT * FROM songs WHERE genre = 'swedish' AND year BETWEEN 2010 AND 2012 AND acousticness > 0.4 AND energy < 0.4 AND valence BETWEEN 0.4 AND 0.5 AND danceability BETWEEN 0.4 AND 0.5 AND loudness < 0.5 ORDER BY popularity DESC LIMIT 10;\n"}]}
{"messages":[{"role":"system","content":"You are a helpful assistant that converts user song preferences into an SQL query. No other responses are needed. The query should be based on numerical feature mappings from user preferences. The features include 'danceability', 'energy', 'acousticness', 'valence', 'tempo', 'year', 'genre', 'loudness', 'liveness', and others relevant for music. Each feature is scaled between 0 and 1, except 'year' which is a 4-digit number, and 'genre' which is a text string. An example user input might be: 'I want upbeat acoustic songs for working out'. An example SQL query output for this input might be: \"SELECT * FROM songs WHERE genre = 'acoustic' AND energy > 0.658 AND tempo > 0.589900517214482 AND valence > 0.6 AND liveliness < 0.226 ORDER BY popularity DESC LIMIT 10;\" KNOW: Valid genres include [('acoustic',), ('afrobeat',), ('alt-rock',), ('ambient',), ('black-metal',), ('blues',), ('breakbeat',), ('cantopop',), ('chicago-house',), ('chill',), ('classical',), ('club',), ('comedy',), ('country',), ('dance',), ('dancehall',), ('death-metal',), ('deep-house',), ('detroit-techno',), ('disco',), ('drum-and-bass',), ('dub',), ('dubstep',), ('edm',), ('electro',), ('electronic',), ('emo',), ('folk',), ('forro',), ('french',), ('funk',), ('garage',), ('german',), ('gospel',), ('goth',), ('grindcore',), ('groove',), ('guitar',), ('hard-rock',), ('hardcore',), ('hardstyle',), ('heavy-metal',), ('hip-hop',), ('house',), ('indian',), ('indie-pop',), ('industrial',), ('jazz',), ('k-pop',), ('metal',), ('metalcore',), ('minimal-techno',), ('new-age',), ('opera',), ('party',), ('piano',), ('pop',), ('pop-film',), ('power-pop',), ('progressive-house',), ('psych-rock',), ('punk',), ('punk-rock',), ('rock',), ('rock-n-roll',), ('romance',), ('sad',), ('salsa',), ('samba',), ('sertanejo',), ('show-tunes',), ('singer-songwriter',), ('ska',), ('sleep',), ('songwriter',), ('soul',), ('spanish',), ('swedish',), ('tango',), ('techno',), ('trance',), ('trip-hop',)] Do not search for genres that are not in the list. IMPORTANT: Valid SQL columns include ONLY: id INTEGER PRIMARY KEY, artist_name TEXT NOT NULL, track_name TEXT NOT NULL, track_id TEXT NOT NULL UNIQUE, popularity INTEGER, year INTEGER, genre TEXT, danceability REAL, energy REAL, key INTEGER, loudness REAL, mode INTEGER, acousticness REAL, instrumentalness REAL, liveness REAL, valence REAL, tempo REAL. Given the user query, generate a complete SQL query, be as specific as you find necessary for the query. The result should always include a LIMIT 10 clause unless otherwise specified by the user."},{"role":"user","content":"I’m seeking industrial tracks from the late 2000s that resemble distant machinery hum—low energy, very subtle acousticness, a controlled tempo, and a faint positive valence, as if hope lingers in the steel corridors."},{"role":"assistant","content":"SELECT * FROM songs WHERE genre = 'industrial' AND year BETWEEN 2007 AND 2009 AND energy < 0.4 AND acousticness > 0.3 AND tempo BETWEEN 0.4 AND 0.5 AND valence BETWEEN 0.4 AND 0.5 AND loudness < 0.5 ORDER BY popularity DESC LIMIT 10;\n"}]}
{"messages":[{"role":"system","content":"You are a helpful assistant that converts user song preferences into an SQL query. No other responses are needed. The query should be based on numerical feature mappings from user preferences. The features include 'danceability', 'energy', 'acousticness', 'valence', 'tempo', 'year', 'genre', 'loudness', 'liveness', and others relevant for music. Each feature is scaled between 0 and 1, except 'year' which is a 4-digit number, and 'genre' which is a text string. An example user input might be: 'I want upbeat acoustic songs for working out'. An example SQL query output for this input might be: \"SELECT * FROM songs WHERE genre = 'acoustic' AND energy > 0.658 AND tempo > 0.589900517214482 AND valence > 0.6 AND liveliness < 0.226 ORDER BY popularity DESC LIMIT 10;\" KNOW: Valid genres include [('acoustic',), ('afrobeat',), ('alt-rock',), ('ambient',), ('black-metal',), ('blues',), ('breakbeat',), ('cantopop',), ('chicago-house',), ('chill',), ('classical',), ('club',), ('comedy',), ('country',), ('dance',), ('dancehall',), ('death-metal',), ('deep-house',), ('detroit-techno',), ('disco',), ('drum-and-bass',), ('dub',), ('dubstep',), ('edm',), ('electro',), ('electronic',), ('emo',), ('folk',), ('forro',), ('french',), ('funk',), ('garage',), ('german',), ('gospel',), ('goth',), ('grindcore',), ('groove',), ('guitar',), ('hard-rock',), ('hardcore',), ('hardstyle',), ('heavy-metal',), ('hip-hop',), ('house',), ('indian',), ('indie-pop',), ('industrial',), ('jazz',), ('k-pop',), ('metal',), ('metalcore',), ('minimal-techno',), ('new-age',), ('opera',), ('party',), ('piano',), ('pop',), ('pop-film',), ('power-pop',), ('progressive-house',), ('psych-rock',), ('punk',), ('punk-rock',), ('rock',), ('rock-n-roll',), ('romance',), ('sad',), ('salsa',), ('samba',), ('sertanejo',), ('show-tunes',), ('singer-songwriter',), ('ska',), ('sleep',), ('songwriter',), ('soul',), ('spanish',), ('swedish',), ('tango',), ('techno',), ('trance',), ('trip-hop',)] Do not search for genres that are not in the list. IMPORTANT: Valid SQL columns include ONLY: id INTEGER PRIMARY KEY, artist_name TEXT NOT NULL, track_name TEXT NOT NULL, track_id TEXT NOT NULL UNIQUE, popularity INTEGER, year INTEGER, genre TEXT, danceability REAL, energy REAL, key INTEGER, loudness REAL, mode INTEGER, acousticness REAL, instrumentalness REAL, liveness REAL, valence REAL, tempo REAL. Given the user query, generate a complete SQL query, be as specific as you find necessary for the query. The result should always include a LIMIT 10 clause unless otherwise specified by the user."},{"role":"user","content":"Could you find some gospel tracks from the early 1990s that evoke a gentle sunrise over an old chapel—soft acoustic presence, low energy, moderate valence, and a subtle warm feeling without being loud?"},{"role":"assistant","content":"SELECT * FROM songs WHERE genre = 'gospel' AND year BETWEEN 1990 AND 1992 AND acousticness > 0.4 AND energy < 0.4 AND valence BETWEEN 0.4 AND 0.6 AND loudness < 0.5 AND tempo < 0.5 ORDER BY popularity DESC LIMIT 10;\n"}]}
{"messages":[{"role":"system","content":"You are a helpful assistant that converts user song preferences into an SQL query. No other responses are needed. The query should be based on numerical feature mappings from user preferences. The features include 'danceability', 'energy', 'acousticness', 'valence', 'tempo', 'year', 'genre', 'loudness', 'liveness', and others relevant for music. Each feature is scaled between 0 and 1, except 'year' which is a 4-digit number, and 'genre' which is a text string. An example user input might be: 'I want upbeat acoustic songs for working out'. An example SQL query output for this input might be: \"SELECT * FROM songs WHERE genre = 'acoustic' AND energy > 0.658 AND tempo > 0.589900517214482 AND valence > 0.6 AND liveliness < 0.226 ORDER BY popularity DESC LIMIT 10;\" KNOW: Valid genres include [('acoustic',), ('afrobeat',), ('alt-rock',), ('ambient',), ('black-metal',), ('blues',), ('breakbeat',), ('cantopop',), ('chicago-house',), ('chill',), ('classical',), ('club',), ('comedy',), ('country',), ('dance',), ('dancehall',), ('death-metal',), ('deep-house',), ('detroit-techno',), ('disco',), ('drum-and-bass',), ('dub',), ('dubstep',), ('edm',), ('electro',), ('electronic',), ('emo',), ('folk',), ('forro',), ('french',), ('funk',), ('garage',), ('german',), ('gospel',), ('goth',), ('grindcore',), ('groove',), ('guitar',), ('hard-rock',), ('hardcore',), ('hardstyle',), ('heavy-metal',), ('hip-hop',), ('house',), ('indian',), ('indie-pop',), ('industrial',), ('jazz',), ('k-pop',), ('metal',), ('metalcore',), ('minimal-techno',), ('new-age',), ('opera',), ('party',), ('piano',), ('pop',), ('pop-film',), ('power-pop',), ('progressive-house',), ('psych-rock',), ('punk',), ('punk-rock',), ('rock',), ('rock-n-roll',), ('romance',), ('sad',), ('salsa',), ('samba',), ('sertanejo',), ('show-tunes',), ('singer-songwriter',), ('ska',), ('sleep',), ('songwriter',), ('soul',), ('spanish',), ('swedish',), ('tango',), ('techno',), ('trance',), ('trip-hop',)] Do not search for genres that are not in the list. IMPORTANT: Valid SQL columns include ONLY: id INTEGER PRIMARY KEY, artist_name TEXT NOT NULL, track_name TEXT NOT NULL, track_id TEXT NOT NULL UNIQUE, popularity INTEGER, year INTEGER, genre TEXT, danceability REAL, energy REAL, key INTEGER, loudness REAL, mode INTEGER, acousticness REAL, instrumentalness REAL, liveness REAL, valence REAL, tempo REAL. Given the user query, generate a complete SQL query, be as specific as you find necessary for the query. The result should always include a LIMIT 10 clause unless otherwise specified by the user."},{"role":"user","content":"I’m curious about forro tunes from the mid-2000s that feel like drifting on a quiet river—gentle acousticness, a mild danceability, not too energetic, and a balanced valence that hovers around calm contentment."},{"role":"assistant","content":"SELECT * FROM songs WHERE genre = 'forro' AND year BETWEEN 2004 AND 2006 AND acousticness > 0.4 AND danceability BETWEEN 0.4 AND 0.5 AND energy < 0.4 AND valence BETWEEN 0.4 AND 0.5 AND loudness < 0.5 ORDER BY popularity DESC LIMIT 10;\n"}]}
{"messages":[{"role":"system","content":"You are a helpful assistant that converts user song preferences into an SQL query. No other responses are needed. The query should be based on numerical feature mappings from user preferences. The features include 'danceability', 'energy', 'acousticness', 'valence', 'tempo', 'year', 'genre', 'loudness', 'liveness', and others relevant for music. Each feature is scaled between 0 and 1, except 'year' which is a 4-digit number, and 'genre' which is a text string. An example user input might be: 'I want upbeat acoustic songs for working out'. An example SQL query output for this input might be: \"SELECT * FROM songs WHERE genre = 'acoustic' AND energy > 0.658 AND tempo > 0.589900517214482 AND valence > 0.6 AND liveliness < 0.226 ORDER BY popularity DESC LIMIT 10;\" KNOW: Valid genres include [('acoustic',), ('afrobeat',), ('alt-rock',), ('ambient',), ('black-metal',), ('blues',), ('breakbeat',), ('cantopop',), ('chicago-house',), ('chill',), ('classical',), ('club',), ('comedy',), ('country',), ('dance',), ('dancehall',), ('death-metal',), ('deep-house',), ('detroit-techno',), ('disco',), ('drum-and-bass',), ('dub',), ('dubstep',), ('edm',), ('electro',), ('electronic',), ('emo',), ('folk',), ('forro',), ('french',), ('funk',), ('garage',), ('german',), ('gospel',), ('goth',), ('grindcore',), ('groove',), ('guitar',), ('hard-rock',), ('hardcore',), ('hardstyle',), ('heavy-metal',), ('hip-hop',), ('house',), ('indian',), ('indie-pop',), ('industrial',), ('jazz',), ('k-pop',), ('metal',), ('metalcore',), ('minimal-techno',), ('new-age',), ('opera',), ('party',), ('piano',), ('pop',), ('pop-film',), ('power-pop',), ('progressive-house',), ('psych-rock',), ('punk',), ('punk-rock',), ('rock',), ('rock-n-roll',), ('romance',), ('sad',), ('salsa',), ('samba',), ('sertanejo',), ('show-tunes',), ('singer-songwriter',), ('ska',), ('sleep',), ('songwriter',), ('soul',), ('spanish',), ('swedish',), ('tango',), ('techno',), ('trance',), ('trip-hop',)] Do not search for genres that are not in the list. IMPORTANT: Valid SQL columns include ONLY: id INTEGER PRIMARY KEY, artist_name TEXT NOT NULL, track_name TEXT NOT NULL, track_id TEXT NOT NULL UNIQUE, popularity INTEGER, year INTEGER, genre TEXT, danceability REAL, energy REAL, key INTEGER, loudness REAL, mode INTEGER, acousticness REAL, instrumentalness REAL, liveness REAL, valence REAL, tempo REAL. Given the user query, generate a complete SQL query, be as specific as you find necessary for the query. The result should always include a LIMIT 10 clause unless otherwise specified by the user."},{"role":"user","content":"Can you get me some sertanejo tracks from the early 2010s that conjure the image of lantern-lit vineyards—moderate acousticness, low energy, a gentle tempo, and a soft valence that whispers comfort?"},{"role":"assistant","content":"SELECT * FROM songs WHERE genre = 'sertanejo' AND year BETWEEN 2010 AND 2012 AND acousticness > 0.4 AND energy < 0.4 AND tempo BETWEEN 0.4 AND 0.5 AND valence BETWEEN 0.4 AND 0.5 AND loudness < 0.5 ORDER BY popularity DESC LIMIT 10;\n"}]}
{"messages":[{"role":"system","content":"You are a helpful assistant that converts user song preferences into an SQL query. No other responses are needed. The query should be based on numerical feature mappings from user preferences. The features include 'danceability', 'energy', 'acousticness', 'valence', 'tempo', 'year', 'genre', 'loudness', 'liveness', and others relevant for music. Each feature is scaled between 0 and 1, except 'year' which is a 4-digit number, and 'genre' which is a text string. An example user input might be: 'I want upbeat acoustic songs for working out'. An example SQL query output for this input might be: \"SELECT * FROM songs WHERE genre = 'acoustic' AND energy > 0.658 AND tempo > 0.589900517214482 AND valence > 0.6 AND liveliness < 0.226 ORDER BY popularity DESC LIMIT 10;\" KNOW: Valid genres include [('acoustic',), ('afrobeat',), ('alt-rock',), ('ambient',), ('black-metal',), ('blues',), ('breakbeat',), ('cantopop',), ('chicago-house',), ('chill',), ('classical',), ('club',), ('comedy',), ('country',), ('dance',), ('dancehall',), ('death-metal',), ('deep-house',), ('detroit-techno',), ('disco',), ('drum-and-bass',), ('dub',), ('dubstep',), ('edm',), ('electro',), ('electronic',), ('emo',), ('folk',), ('forro',), ('french',), ('funk',), ('garage',), ('german',), ('gospel',), ('goth',), ('grindcore',), ('groove',), ('guitar',), ('hard-rock',), ('hardcore',), ('hardstyle',), ('heavy-metal',), ('hip-hop',), ('house',), ('indian',), ('indie-pop',), ('industrial',), ('jazz',), ('k-pop',), ('metal',), ('metalcore',), ('minimal-techno',), ('new-age',), ('opera',), ('party',), ('piano',), ('pop',), ('pop-film',), ('power-pop',), ('progressive-house',), ('psych-rock',), ('punk',), ('punk-rock',), ('rock',), ('rock-n-roll',), ('romance',), ('sad',), ('salsa',), ('samba',), ('sertanejo',), ('show-tunes',), ('singer-songwriter',), ('ska',), ('sleep',), ('songwriter',), ('soul',), ('spanish',), ('swedish',), ('tango',), ('techno',), ('trance',), ('trip-hop',)] Do not search for genres that are not in the list. IMPORTANT: Valid SQL columns include ONLY: id INTEGER PRIMARY KEY, artist_name TEXT NOT NULL, track_name TEXT NOT NULL, track_id TEXT NOT NULL UNIQUE, popularity INTEGER, year INTEGER, genre TEXT, danceability REAL, energy REAL, key INTEGER, loudness REAL, mode INTEGER, acousticness REAL, instrumentalness REAL, liveness REAL, valence REAL, tempo REAL. Given the user query, generate a complete SQL query, be as specific as you find necessary for the query. The result should always include a LIMIT 10 clause unless otherwise specified by the user."},{"role":"user","content":"I’d love some swedish tracks from the late 1990s that feel like discovering an old diary in a quiet attic—low energy, a hint of acousticness, moderate valence, and just enough tempo to keep the heart gently engaged."},{"role":"assistant","content":"SELECT * FROM songs WHERE genre = 'swedish' AND year BETWEEN 1997 AND 1999 AND energy < 0.4 AND acousticness > 0.3 AND valence BETWEEN 0.4 AND 0.5 AND tempo BETWEEN 0.4 AND 0.5 AND loudness < 0.5 ORDER BY popularity DESC LIMIT 10;\n"}]}
{"messages":[{"role":"system","content":"You are a helpful assistant that converts user song preferences into an SQL query. No other responses are needed. The query should be based on numerical feature mappings from user preferences. The features include 'danceability', 'energy', 'acousticness', 'valence', 'tempo', 'year', 'genre', 'loudness', 'liveness', and others relevant for music. Each feature is scaled between 0 and 1, except 'year' which is a 4-digit number, and 'genre' which is a text string. An example user input might be: 'I want upbeat acoustic songs for working out'. An example SQL query output for this input might be: \"SELECT * FROM songs WHERE genre = 'acoustic' AND energy > 0.658 AND tempo > 0.589900517214482 AND valence > 0.6 AND liveliness < 0.226 ORDER BY popularity DESC LIMIT 10;\" KNOW: Valid genres include [('acoustic',), ('afrobeat',), ('alt-rock',), ('ambient',), ('black-metal',), ('blues',), ('breakbeat',), ('cantopop',), ('chicago-house',), ('chill',), ('classical',), ('club',), ('comedy',), ('country',), ('dance',), ('dancehall',), ('death-metal',), ('deep-house',), ('detroit-techno',), ('disco',), ('drum-and-bass',), ('dub',), ('dubstep',), ('edm',), ('electro',), ('electronic',), ('emo',), ('folk',), ('forro',), ('french',), ('funk',), ('garage',), ('german',), ('gospel',), ('goth',), ('grindcore',), ('groove',), ('guitar',), ('hard-rock',), ('hardcore',), ('hardstyle',), ('heavy-metal',), ('hip-hop',), ('house',), ('indian',), ('indie-pop',), ('industrial',), ('jazz',), ('k-pop',), ('metal',), ('metalcore',), ('minimal-techno',), ('new-age',), ('opera',), ('party',), ('piano',), ('pop',), ('pop-film',), ('power-pop',), ('progressive-house',), ('psych-rock',), ('punk',), ('punk-rock',), ('rock',), ('rock-n-roll',), ('romance',), ('sad',), ('salsa',), ('samba',), ('sertanejo',), ('show-tunes',), ('singer-songwriter',), ('ska',), ('sleep',), ('songwriter',), ('soul',), ('spanish',), ('swedish',), ('tango',), ('techno',), ('trance',), ('trip-hop',)] Do not search for genres that are not in the list. IMPORTANT: Valid SQL columns include ONLY: id INTEGER PRIMARY KEY, artist_name TEXT NOT NULL, track_name TEXT NOT NULL, track_id TEXT NOT NULL UNIQUE, popularity INTEGER, year INTEGER, genre TEXT, danceability REAL, energy REAL, key INTEGER, loudness REAL, mode INTEGER, acousticness REAL, instrumentalness REAL, liveness REAL, valence REAL, tempo REAL. Given the user query, generate a complete SQL query, be as specific as you find necessary for the query. The result should always include a LIMIT 10 clause unless otherwise specified by the user."},{"role":"user","content":"Show me some funk tunes from the early 1980s that feel like walking on weathered wooden floors at dusk—moderate danceability, a bit of acousticness, not too loud, and a gentle valence that suggests a quiet smile."},{"role":"assistant","content":"SELECT * FROM songs WHERE genre = 'funk' AND year BETWEEN 1980 AND 1982 AND danceability BETWEEN 0.4 AND 0.6 AND acousticness > 0.3 AND energy < 0.5 AND valence BETWEEN 0.4 AND 0.5 AND loudness < 0.5 ORDER BY popularity DESC LIMIT 10;\n"}]}
{"messages":[{"role":"system","content":"You are a helpful assistant that converts user song preferences into an SQL query. No other responses are needed. The query should be based on numerical feature mappings from user preferences. The features include 'danceability', 'energy', 'acousticness', 'valence', 'tempo', 'year', 'genre', 'loudness', 'liveness', and others relevant for music. Each feature is scaled between 0 and 1, except 'year' which is a 4-digit number, and 'genre' which is a text string. An example user input might be: 'I want upbeat acoustic songs for working out'. An example SQL query output for this input might be: \"SELECT * FROM songs WHERE genre = 'acoustic' AND energy > 0.658 AND tempo > 0.589900517214482 AND valence > 0.6 AND liveliness < 0.226 ORDER BY popularity DESC LIMIT 10;\" KNOW: Valid genres include [('acoustic',), ('afrobeat',), ('alt-rock',), ('ambient',), ('black-metal',), ('blues',), ('breakbeat',), ('cantopop',), ('chicago-house',), ('chill',), ('classical',), ('club',), ('comedy',), ('country',), ('dance',), ('dancehall',), ('death-metal',), ('deep-house',), ('detroit-techno',), ('disco',), ('drum-and-bass',), ('dub',), ('dubstep',), ('edm',), ('electro',), ('electronic',), ('emo',), ('folk',), ('forro',), ('french',), ('funk',), ('garage',), ('german',), ('gospel',), ('goth',), ('grindcore',), ('groove',), ('guitar',), ('hard-rock',), ('hardcore',), ('hardstyle',), ('heavy-metal',), ('hip-hop',), ('house',), ('indian',), ('indie-pop',), ('industrial',), ('jazz',), ('k-pop',), ('metal',), ('metalcore',), ('minimal-techno',), ('new-age',), ('opera',), ('party',), ('piano',), ('pop',), ('pop-film',), ('power-pop',), ('progressive-house',), ('psych-rock',), ('punk',), ('punk-rock',), ('rock',), ('rock-n-roll',), ('romance',), ('sad',), ('salsa',), ('samba',), ('sertanejo',), ('show-tunes',), ('singer-songwriter',), ('ska',), ('sleep',), ('songwriter',), ('soul',), ('spanish',), ('swedish',), ('tango',), ('techno',), ('trance',), ('trip-hop',)] Do not search for genres that are not in the list. IMPORTANT: Valid SQL columns include ONLY: id INTEGER PRIMARY KEY, artist_name TEXT NOT NULL, track_name TEXT NOT NULL, track_id TEXT NOT NULL UNIQUE, popularity INTEGER, year INTEGER, genre TEXT, danceability REAL, energy REAL, key INTEGER, loudness REAL, mode INTEGER, acousticness REAL, instrumentalness REAL, liveness REAL, valence REAL, tempo REAL. Given the user query, generate a complete SQL query, be as specific as you find necessary for the query. The result should always include a LIMIT 10 clause unless otherwise specified by the user."},{"role":"user","content":"I’d like some forro tunes from the early 1990s that carry the scent of dried flowers—mild acousticness, low energy, a gentle tempo, and a balanced valence that never grows too bright or dark."},{"role":"assistant","content":"SELECT * FROM songs WHERE genre = 'forro' AND year BETWEEN 1990 AND 1992 AND acousticness > 0.4 AND energy < 0.4 AND tempo BETWEEN 0.4 AND 0.5 AND valence BETWEEN 0.4 AND 0.5 AND loudness < 0.5 ORDER BY popularity DESC LIMIT 10;\n"}]}
{"messages":[{"role":"system","content":"You are a helpful assistant that converts user song preferences into an SQL query. No other responses are needed. The query should be based on numerical feature mappings from user preferences. The features include 'danceability', 'energy', 'acousticness', 'valence', 'tempo', 'year', 'genre', 'loudness', 'liveness', and others relevant for music. Each feature is scaled between 0 and 1, except 'year' which is a 4-digit number, and 'genre' which is a text string. An example user input might be: 'I want upbeat acoustic songs for working out'. An example SQL query output for this input might be: \"SELECT * FROM songs WHERE genre = 'acoustic' AND energy > 0.658 AND tempo > 0.589900517214482 AND valence > 0.6 AND liveliness < 0.226 ORDER BY popularity DESC LIMIT 10;\" KNOW: Valid genres include [('acoustic',), ('afrobeat',), ('alt-rock',), ('ambient',), ('black-metal',), ('blues',), ('breakbeat',), ('cantopop',), ('chicago-house',), ('chill',), ('classical',), ('club',), ('comedy',), ('country',), ('dance',), ('dancehall',), ('death-metal',), ('deep-house',), ('detroit-techno',), ('disco',), ('drum-and-bass',), ('dub',), ('dubstep',), ('edm',), ('electro',), ('electronic',), ('emo',), ('folk',), ('forro',), ('french',), ('funk',), ('garage',), ('german',), ('gospel',), ('goth',), ('grindcore',), ('groove',), ('guitar',), ('hard-rock',), ('hardcore',), ('hardstyle',), ('heavy-metal',), ('hip-hop',), ('house',), ('indian',), ('indie-pop',), ('industrial',), ('jazz',), ('k-pop',), ('metal',), ('metalcore',), ('minimal-techno',), ('new-age',), ('opera',), ('party',), ('piano',), ('pop',), ('pop-film',), ('power-pop',), ('progressive-house',), ('psych-rock',), ('punk',), ('punk-rock',), ('rock',), ('rock-n-roll',), ('romance',), ('sad',), ('salsa',), ('samba',), ('sertanejo',), ('show-tunes',), ('singer-songwriter',), ('ska',), ('sleep',), ('songwriter',), ('soul',), ('spanish',), ('swedish',), ('tango',), ('techno',), ('trance',), ('trip-hop',)] Do not search for genres that are not in the list. IMPORTANT: Valid SQL columns include ONLY: id INTEGER PRIMARY KEY, artist_name TEXT NOT NULL, track_name TEXT NOT NULL, track_id TEXT NOT NULL UNIQUE, popularity INTEGER, year INTEGER, genre TEXT, danceability REAL, energy REAL, key INTEGER, loudness REAL, mode INTEGER, acousticness REAL, instrumentalness REAL, liveness REAL, valence REAL, tempo REAL. Given the user query, generate a complete SQL query, be as specific as you find necessary for the query. The result should always include a LIMIT 10 clause unless otherwise specified by the user."},{"role":"user","content":"Show me some gospel tunes from the early 2000s that feel like distant choir voices in a misty forest—acoustic whispers, low energy, subtle valence, and a mellow tempo."},{"role":"assistant","content":"SELECT * FROM songs WHERE genre = 'gospel' AND year BETWEEN 2000 AND 2002 AND acousticness > 0.4 AND energy < 0.4 AND valence BETWEEN 0.4 AND 0.5 AND tempo < 0.5 AND loudness < 0.5 ORDER BY popularity DESC LIMIT 10;\n"}]}
{"messages":[{"role":"system","content":"You are a helpful assistant that converts user song preferences into an SQL query. No other responses are needed. The query should be based on numerical feature mappings from user preferences. The features include 'danceability', 'energy', 'acousticness', 'valence', 'tempo', 'year', 'genre', 'loudness', 'liveness', and others relevant for music. Each feature is scaled between 0 and 1, except 'year' which is a 4-digit number, and 'genre' which is a text string. An example user input might be: 'I want upbeat acoustic songs for working out'. An example SQL query output for this input might be: \"SELECT * FROM songs WHERE genre = 'acoustic' AND energy > 0.658 AND tempo > 0.589900517214482 AND valence > 0.6 AND liveliness < 0.226 ORDER BY popularity DESC LIMIT 10;\" KNOW: Valid genres include [('acoustic',), ('afrobeat',), ('alt-rock',), ('ambient',), ('black-metal',), ('blues',), ('breakbeat',), ('cantopop',), ('chicago-house',), ('chill',), ('classical',), ('club',), ('comedy',), ('country',), ('dance',), ('dancehall',), ('death-metal',), ('deep-house',), ('detroit-techno',), ('disco',), ('drum-and-bass',), ('dub',), ('dubstep',), ('edm',), ('electro',), ('electronic',), ('emo',), ('folk',), ('forro',), ('french',), ('funk',), ('garage',), ('german',), ('gospel',), ('goth',), ('grindcore',), ('groove',), ('guitar',), ('hard-rock',), ('hardcore',), ('hardstyle',), ('heavy-metal',), ('hip-hop',), ('house',), ('indian',), ('indie-pop',), ('industrial',), ('jazz',), ('k-pop',), ('metal',), ('metalcore',), ('minimal-techno',), ('new-age',), ('opera',), ('party',), ('piano',), ('pop',), ('pop-film',), ('power-pop',), ('progressive-house',), ('psych-rock',), ('punk',), ('punk-rock',), ('rock',), ('rock-n-roll',), ('romance',), ('sad',), ('salsa',), ('samba',), ('sertanejo',), ('show-tunes',), ('singer-songwriter',), ('ska',), ('sleep',), ('songwriter',), ('soul',), ('spanish',), ('swedish',), ('tango',), ('techno',), ('trance',), ('trip-hop',)] Do not search for genres that are not in the list. IMPORTANT: Valid SQL columns include ONLY: id INTEGER PRIMARY KEY, artist_name TEXT NOT NULL, track_name TEXT NOT NULL, track_id TEXT NOT NULL UNIQUE, popularity INTEGER, year INTEGER, genre TEXT, danceability REAL, energy REAL, key INTEGER, loudness REAL, mode INTEGER, acousticness REAL, instrumentalness REAL, liveness REAL, valence REAL, tempo REAL. Given the user query, generate a complete SQL query, be as specific as you find necessary for the query. The result should always include a LIMIT 10 clause unless otherwise specified by the user."},{"role":"user","content":"I’m curious about metalcore from the mid-2010s that somehow feels restrained—like muted metal strings in a quiet workshop, low energy, slight acousticness, and a careful valence."},{"role":"assistant","content":"SELECT * FROM songs WHERE genre = 'metalcore' AND year BETWEEN 2014 AND 2016 AND energy < 0.4 AND acousticness > 0.3 AND valence BETWEEN 0.4 AND 0.5 AND loudness < 0.5 AND tempo < 0.5 ORDER BY popularity DESC LIMIT 10;\n"}]}
{"messages":[{"role":"system","content":"You are a helpful assistant that converts user song preferences into an SQL query. No other responses are needed. The query should be based on numerical feature mappings from user preferences. The features include 'danceability', 'energy', 'acousticness', 'valence', 'tempo', 'year', 'genre', 'loudness', 'liveness', and others relevant for music. Each feature is scaled between 0 and 1, except 'year' which is a 4-digit number, and 'genre' which is a text string. An example user input might be: 'I want upbeat acoustic songs for working out'. An example SQL query output for this input might be: \"SELECT * FROM songs WHERE genre = 'acoustic' AND energy > 0.658 AND tempo > 0.589900517214482 AND valence > 0.6 AND liveliness < 0.226 ORDER BY popularity DESC LIMIT 10;\" KNOW: Valid genres include [('acoustic',), ('afrobeat',), ('alt-rock',), ('ambient',), ('black-metal',), ('blues',), ('breakbeat',), ('cantopop',), ('chicago-house',), ('chill',), ('classical',), ('club',), ('comedy',), ('country',), ('dance',), ('dancehall',), ('death-metal',), ('deep-house',), ('detroit-techno',), ('disco',), ('drum-and-bass',), ('dub',), ('dubstep',), ('edm',), ('electro',), ('electronic',), ('emo',), ('folk',), ('forro',), ('french',), ('funk',), ('garage',), ('german',), ('gospel',), ('goth',), ('grindcore',), ('groove',), ('guitar',), ('hard-rock',), ('hardcore',), ('hardstyle',), ('heavy-metal',), ('hip-hop',), ('house',), ('indian',), ('indie-pop',), ('industrial',), ('jazz',), ('k-pop',), ('metal',), ('metalcore',), ('minimal-techno',), ('new-age',), ('opera',), ('party',), ('piano',), ('pop',), ('pop-film',), ('power-pop',), ('progressive-house',), ('psych-rock',), ('punk',), ('punk-rock',), ('rock',), ('rock-n-roll',), ('romance',), ('sad',), ('salsa',), ('samba',), ('sertanejo',), ('show-tunes',), ('singer-songwriter',), ('ska',), ('sleep',), ('songwriter',), ('soul',), ('spanish',), ('swedish',), ('tango',), ('techno',), ('trance',), ('trip-hop',)] Do not search for genres that are not in the list. IMPORTANT: Valid SQL columns include ONLY: id INTEGER PRIMARY KEY, artist_name TEXT NOT NULL, track_name TEXT NOT NULL, track_id TEXT NOT NULL UNIQUE, popularity INTEGER, year INTEGER, genre TEXT, danceability REAL, energy REAL, key INTEGER, loudness REAL, mode INTEGER, acousticness REAL, instrumentalness REAL, liveness REAL, valence REAL, tempo REAL. Given the user query, generate a complete SQL query, be as specific as you find necessary for the query. The result should always include a LIMIT 10 clause unless otherwise specified by the user."},{"role":"user","content":"Could I see some spanish tracks from the mid-1980s that feel like fading watercolor paintings—low energy, gentle acousticness, moderate valence, and a quiet hush over the instruments?"},{"role":"assistant","content":"SELECT * FROM songs WHERE genre = 'spanish' AND year BETWEEN 1985 AND 1987 AND energy < 0.4 AND acousticness > 0.4 AND valence BETWEEN 0.4 AND 0.5 AND loudness < 0.5 AND tempo < 0.5 ORDER BY popularity DESC LIMIT 10;\n"}]}
{"role":"user","content":"Give me some songs for a St patrick day party"},{"role":"assistant","content":"SELECT * FROM songs WHERE (genre = 'irish' OR genre = 'folk' OR genre = 'celtic') AND genre != 'pop' ORDER BY popularity DESC LIMIT 10;\n"}]}
